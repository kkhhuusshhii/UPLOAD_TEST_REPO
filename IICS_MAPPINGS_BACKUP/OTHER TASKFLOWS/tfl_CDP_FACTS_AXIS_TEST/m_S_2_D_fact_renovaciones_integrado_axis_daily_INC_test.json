[
    {
        "type": "customQuery",
        "path": "content.transformations[0].dataAdapter.object.customQuery",
        "value": "--Updated query with rolled back transporte changes & item_type changes inc daily\n\nWITH\n    CMI_PROPUESTA_1 AS\n    (\n        SELECT\n            PROP.SCICLO,\n            PROP.CRAMO,\n            PROP.CTIPDOC,\n            PROP.NPOLIZA,\n            PROP.NPOLIZAANT,\n            PROP.CRENOVA,\n            PROP.CORIGEN,\n            PROP.CRENOVPE\n        FROM\n            CDP_ODS.SISAXIS_CMI_PROPUESTA PROP ,\n            CDP_ODS.SISAXIS_CMI_MOVPROPUESTA MOV\n        WHERE\n            PROP.CSISTEMA='1'\n        AND MOV.CSISTEMA='15'\n        AND PROP.SCICLO=MOV.SCICLO\n        AND MOV.NMOVIMI=1\n        AND TO_CHAR(MOV.FEFECTO,'YYYY')>=2011\n    )\n    ,\n    CMI_MOVPROPUESTA_15 AS\n    (\n        SELECT\n            SCICLO,\n            NMOVIMI,\n            SNMOVIMI,\n            CESTADO,\n            FEFECTO,\n            CUSUASIG,\n            CUSUMOD,\n            FTERMINO,\n            CTIPO,\n            ROL_EJEC,\n            FINICIO_REAL\n        FROM\n            CDP_ODS.SISAXIS_CMI_MOVPROPUESTA\n        WHERE\n            CSISTEMA='15'\n        AND TO_CHAR(FEFECTO,'YYYY')>=2011\n    )\n    ,\n    DET AS\n    (\n        SELECT\n            NRO_LINEA,\n            ID_PROCESO,\n            ESTADO,\n            DESC_ESTADO,\n            SEC_CAR_MAS,\n            COD_EMPRESA,\n            COD_FORMATO,\n            SSEGURO,\n            COD_PRODUC,\n            NUM_CONVEN,\n            NUM_POLIZA,\n            RUT_CONTRA,\n            RUT_ASE,\n            NU_RECIBO,\n            COD_AGENTE,\n            NU_PROPUESTA,\n            NUM_CICLO,\n            NUM_POLIZA_ANT,\n            NUM_COTIZACION,\n            NUM_MASIVO,\n            FEC_CREA,\n            PRIMA_PROPUESTA,\n            CI_FONO_1,\n            CI_FONO_2\n        FROM\n            CDP_ODS.SISADMCOM_SISREC_DETCARMAS\n    )\n    ,\n    PROD AS\n    (\n        SELECT\n            p.cramo,\n            p.sproduc,\n            t.ttitulo,\n            p.cobjase\n        FROM\n            CDP_ODS.sisaxis_productos p,\n            CDP_ODS.sisaxis_titulopro t\n        WHERE\n            p.ccolect=t.ccolect\n        AND p.cramo=t.cramo\n        AND p.cmodali=t.cmodali\n        AND p.ctipseg=t.ctipseg\n    )\n    ,\n    DOC AS\n    (\n        SELECT\n            a.sseguro,\n            a.nmovimis,\n            MAX(a.sciclo) AS sciclo\n        FROM\n            (\n                SELECT\n                    s.csistema,\n                    s.sciclo,\n                    nmovimi,\n                    fefecto,\n                    snmovimd,\n                    ftermino,\n                    cusuasig,\n                    tipo_endoso,\n                    ncertif,\n                    sseguro,\n                    nmovimis,\n                    cramo,\n                    s.npoliza,\n                    s.csituac\n                FROM\n                    (\n                        SELECT\n                            m.csistema,\n                            m.sciclo,\n                            m.nmovimi,\n                            m.fefecto,\n                            snmovimi AS snmovimd,\n                            m.ftermino,\n                            m.cusuasig,\n                            DECODE(m.nmovimir,1, 'Endoso Inclusion', 'Endoso Otros') tipo_endoso,\n                            s.ncertif,\n                            m.sseguro,\n                            m.nmovimir AS nmovimis,\n                            s.cramo,\n                            s.npoliza,\n                            s.csituac\n                        FROM\n                            cdp_ods.sisaxis_cmi_movpropuesta AS m\n                        INNER JOIN\n                            cdp_ods.sisaxis_seguros s\n                        ON\n                            m.sseguro=s.sseguro\n                        WHERE\n                            m.ctipo='D'\n                        AND m.cestado='DIGITADA' )s\n                INNER JOIN\n                    (\n                        SELECT\n                            p.sciclo,\n                            p.csistema\n                        FROM\n                            cdp_ods.sisaxis_cmi_propuesta p,\n                            cdp_ods.sisaxis_cmi_movpropuesta m1\n                        WHERE\n                            p.csistema='1'\n                        AND p.sciclo>300000\n                        AND p.csistema=m1.csistema\n                        AND p.sciclo =m1.sciclo\n                        AND m1.cestado ='RECEPCIO'\n                        AND m1.ctipo ='E'\n                        AND m1.fefecto >=to_date('01012011','ddmmyyyy')) b\n                ON\n                    s.sciclo=b.sciclo\n                AND s.csistema=b.csistema )a\n        GROUP BY\n            a.sseguro,\n            a.nmovimis\n    )\n    ,\n    ITEM_RENO_NOFLOTA AS\n    (\n        SELECT\n            sseguro,\n            id_item2,\n            CASE\n                WHEN ISNULL(id_item2,0)>0\n                THEN 'SI'\n                ELSE 'NO'\n            END AS ITEM_RENOVACION\n        FROM\n            (\n                -- START    1st  TEMP TABLE ITEM_RENOVACION_VHNOFLOTA (LOAD * Resident ITEM_VHNF)\n                SELECT\n                    seg.SSEGURO,\n                    seg.CRAMO,\n                    seg.NPOLIZA,\n                    seg.NCERTIF,\n                    seg.FEFECTO,\n                    DECODE(seg.CDURACI,3, seg.FVENCIM,0, seg.FCARPRO) FVENCIM,\n                    seg.CSITUAC,\n                    x.NNUMNIF AS RUT_ASEG,\n                    y.Patente_norm,\n                    w.Count_Items,\n                    w.Flota\n                FROM\n                    cdp_ods.SISAXIS_SEGUROS SEG\n                LEFT JOIN\n                    (\n                        SELECT\n                            a.SSEGURO,\n                            a.SPERSON,\n                            b.NNUMNIF,\n                            a.NRIESGO,\n                            a.NMOVIMA,\n                            a.NMOVIMB,\n                            a.FFECFIN,\n                            a.NORDEN,\n                            a.CDOMICI\n                        FROM\n                            cdp_ods.SISAXIS_ASEGURADOS a\n                        LEFT JOIN\n                            cdp_ods.SISAXIS_PERSONAS b\n                        ON\n                            (\n                                a.SPERSON=b.SPERSON)\n                        WHERE\n                            a.FFECFIN IS NULL ) x\n                ON\n                    (\n                        seg.SSEGURO=x.SSEGURO)\n                LEFT JOIN\n                    (\nselect \nn.SSEGURO as Id_item,n.NMOVIMI as Numero_movimiento,n.CMATRIC as Patente,n.CVERSION as Id_version,\nn.NRIESGO as Numero_riesgo, \n     case when len(replace(CMATRIC,'-.',''))<>6\n       \n         or REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),1,1),'^[0-9]+$')>0\n         or REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),2,1),'^[0-9]+$')>0 \n         or REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),5,1),'^[0-9]+$')=0\n         or REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),6,1),'^[0-9]+$')=0\n         or (REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),3,1),'^[0-9]+$')=0  and REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),4,1),'^[0-9]+$')>0)\n         or (REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),3,1),'^[0-9]+$')>0 and REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),4,1),'^[0-9]+$')=0) \n         or replace(Replace(Replace(CMATRIC,'-',''),'.',''),' ','') in (\n         'XXXX00','XX0000','XXXX01','XX0001','XXXX11','AA0000','SP4444',\n         'ET1111','SP0000','XX1111','AAAA00','MY0000','XXXX12','XXXX10','ET0001',\n          'EETT00')\n          THEN ''\n          ELSE replace(CMATRIC,'-. ','')\n          end as Patente_norm FROM cdp_ods.SISAXIS_AUTRIESGOS n ) y\n                ON\n                    (\n                        y.Id_item=seg.SSEGURO)\n                LEFT JOIN\n                    (\n                        -- Begin Query from Temp Table FLOTA in VENTA_LIBERTY\n                        SELECT\n                            k.NPOLIZA,\n                            COUNT(k.SSEGURO) AS Count_Items,\n                            CASE\n                                WHEN COUNT(k.SSEGURO)>=10\n                                THEN 'Si'\n                                ELSE 'No'\n                            END AS Flota\n                        FROM\n                            (\n                                SELECT\n                                    seg2.SSEGURO,\n                                    seg2.CRAMO,\n                                    seg2.CAGENTE,\n                                    seg2.NPOLIZA,\n                                    seg2.NCERTIF,\n                                    seg2.FEFECTO,\n                                    seg2.COBJASE,\n                                    seg2.CTIPCOA,\n                                    SUBSTR(seg2.CAGENTE,-3,8) CSUCURSAL,\n                                    seg2.CTIPCOM,\n                                    DECODE(seg2.CDURACI,3, seg2.FVENCIM,0, seg2.FCARPRO) FVENCIM,\n                                    seg2.FANULAC,\n                                    DECODE(seg2.CSITUAC,0,'Vigente',2,'Anulado/Cancelado',5,\n                                    'Endoso Pendiente','Otro') SITUAC,\n                                    seg2.SCIACOA,\n                                    seg2.PPARCOA,\n                                    seg2.SPRODUC,\n                                    seg2.CMONSEG,\n                                    seg2.FCAMBIO,\n                                    seg2.CLINNEG,\n                                    seg2.CAGRSEG,\n                                    seg2.CRFAAGE SCICLO,\n                                    seg2.CFLOTA,\n                                    seg2.CSITUAC,\n                                    seg2.NPROPM,\n                                    DECODE( CAST(SUBSTR(seg2.CAGENTE,1,5) AS INTEGER), 7527,\n                                    'Retail', 8204, 'Retail', 7723, 'Retail', 3376, 'Retail', 3424,\n                                    'Retail', DECODE (CONV.CFLOTA, 1, DECODE(CAST(SUBSTR\n                                    (seg2.CAGENTE,-3,8) AS INTEGER), 24, 'Banca', 25, 'Banca',\n                                    'Flota'), 'Individual' )) CANAL,\n                                    --sisaxis.f_clasificacion_fecu(seg2.sseguro) clasificacion_fecu\n                                    -- ,\n                                    seg2.CMODALI,\n                                    seg2.CTIPSEG,\n                                    seg2.CCOLECT,\n                                    seg2.CACTIVI,\n                                    seg2.CRESERVA\n                                FROM\n                                    cdp_ods.SISAXIS_SEGUROS SEG2,\n                                    cdp_ods.SISAXIS_CTR_DESAGRUPASEG CONV\n                                WHERE\n                                    seg2.cagrseg = conv.cagrseg(+)\n                                AND ncertif > 0 ) k\n                        WHERE\n                            k.NCERTIF > 0\n                        GROUP BY\n                            k.NPOLIZA ) w\n                ON\n                    (\n                        w.NPOLIZA = seg.NPOLIZA )\n                    -- End Query from Temp Table FLOTA in VENTA_LIBERTY\n                WHERE --seg.SSEGURO IN (900327438,900250970,900327424,900372586,900327400,900334130\n                    -- ,900331236,900332401,900373592,900367654,900331218,900332365)\n                    --and\n                    ncertif > 0\n                AND CRAMO=6 \nand w.Flota='No') ST1\n            -- END      1st  TEMP TABLE ITEM_RENOVACION_VHNOFLOTA (LOAD * Resident ITEM_VHNF)\n            -- START  2nd TEMP TABLE ITEM_RENOVACION_VHNOFLOTA (LOAD * Resident ITEM_VHNF Where\n            -- Id.Situacion= 0)\n        LEFT JOIN\n            (\n                SELECT\n                    ST2.SSEGURO  AS ID_ITEM2,\n                    ST2.NPOLIZA  AS NPOLIZA2,\n                    ST2.NCERTIF  AS NCERTIF2,\n                    ST2.Patente_norm  AS Patente_norm2,\n                    ST2.RUT_ASEG AS RUT_ASEG2,\n                    ST2.FVENCIM  AS INI_VIGENCIA2\n                FROM\n                    (\n                        SELECT\n                            seg.SSEGURO,\n                            seg.CRAMO,\n                            seg.NPOLIZA,\n                            seg.NCERTIF,\n                            seg.FEFECTO,\n                            DECODE(seg.CDURACI,3, seg.FVENCIM,0, seg.FCARPRO) FVENCIM,\n                            seg.CSITUAC,\n                            x.NNUMNIF AS RUT_ASEG,\n                            y.Patente_norm,\n                            w.Count_Items,\n                            w.Flota\n                        FROM\n                            cdp_ods.SISAXIS_SEGUROS SEG\n                        LEFT JOIN\n                            (\n                                SELECT\n                                    a.SSEGURO,\n                                    a.SPERSON,\n                                    b.NNUMNIF,\n                                    a.NRIESGO,\n                                    a.NMOVIMA,\n                                    a.NMOVIMB,\n                                    a.FFECFIN,\n                                    a.NORDEN,\n                                    a.CDOMICI\n                                FROM\n                                    cdp_ods.SISAXIS_ASEGURADOS a\n                                LEFT JOIN\n                                    cdp_ods.SISAXIS_PERSONAS b\n                                ON\n                                    (\n                                        a.SPERSON=b.SPERSON)\n                                WHERE\n                                    a.FFECFIN IS NULL ) x\n                        ON\n                            (\n                                seg.SSEGURO=x.SSEGURO)\n                        LEFT JOIN\n                            (\n select \nn.SSEGURO as Id_item,n.NMOVIMI as Numero_movimiento,n.CMATRIC as Patente,n.CVERSION as Id_version,\nn.NRIESGO as Numero_riesgo, \n     case when len(replace(CMATRIC,'-.',''))<>6\n       \n         or REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),1,1),'^[0-9]+$')>0\n         or REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),2,1),'^[0-9]+$')>0 \n         or REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),5,1),'^[0-9]+$')=0\n         or REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),6,1),'^[0-9]+$')=0\n         or (REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),3,1),'^[0-9]+$')=0  and REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),4,1),'^[0-9]+$')>0)\n         or (REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),3,1),'^[0-9]+$')>0 and REGEXP_COUNT(substring(replace(CMATRIC,'-.',''),4,1),'^[0-9]+$')=0) \n         or replace(Replace(Replace(CMATRIC,'-',''),'.',''),' ','') in (\n         'XXXX00','XX0000','XXXX01','XX0001','XXXX11','AA0000','SP4444',\n         'ET1111','SP0000','XX1111','AAAA00','MY0000','XXXX12','XXXX10','ET0001',\n          'EETT00')\n          THEN ''\n          ELSE replace(CMATRIC,'-. ','')\n          end as Patente_norm FROM cdp_ods.SISAXIS_AUTRIESGOS n ) y\n                        ON\n                            (\n                                y.Id_item=seg.SSEGURO)\n                        LEFT JOIN\n                            (\n                                -- Begin Query from Temp Table FLOTA in VENTA_LIBERTY\n                                SELECT\n                                    k.NPOLIZA,\n                                    COUNT(k.SSEGURO) AS Count_Items,\n                                    CASE\n                                        WHEN COUNT(k.SSEGURO)>=10\n                                        THEN 'Si'\n                                        ELSE 'No'\n                                    END AS Flota\n                                FROM\n                                    (\n                                        SELECT\n                                            seg2.SSEGURO,\n                                            seg2.CRAMO,\n                                            seg2.CAGENTE,\n                                            seg2.NPOLIZA,\n                                            seg2.NCERTIF,\n                                            seg2.FEFECTO,\n                                            seg2.COBJASE,\n                                            seg2.CTIPCOA,\n                                            SUBSTR(seg2.CAGENTE,-3,8) CSUCURSAL,\n                                            seg2.CTIPCOM,\n                                            DECODE(seg2.CDURACI,3, seg2.FVENCIM,0, seg2.FCARPRO)\n                                            FVENCIM,\n                                            seg2.FANULAC,\n                                            DECODE(seg2.CSITUAC,0,'Vigente',2,'Anulado/Cancelado',5\n                                            ,'Endoso Pendiente','Otro') SITUAC,\n                                            seg2.SCIACOA,\n                                            seg2.PPARCOA,\n                                            seg2.SPRODUC,\n                                            seg2.CMONSEG,\n                                            seg2.FCAMBIO,\n                                            seg2.CLINNEG,\n                                            seg2.CAGRSEG,\n                                            seg2.CRFAAGE SCICLO,\n                                            seg2.CFLOTA,\n                                            seg2.CSITUAC,\n                                            seg2.NPROPM,\n                                            DECODE(CAST( SUBSTR(seg2.CAGENTE,1,5)AS INTEGER), 7527,\n                                            'Retail', 8204, 'Retail', 7723, 'Retail', 3376,\n                                            'Retail', 3424, 'Retail', DECODE (CONV.CFLOTA, 1,\n                                            DECODE(CAST(SUBSTR(seg2.CAGENTE,-3,8)AS INTEGER), 24,\n                                            'Banca', 25, 'Banca', 'Flota'), 'Individual' )) CANAL,\n                                            --sisaxis.f_clasificacion_fecu(seg2.sseguro)\n                                            -- clasificacion_fecu ,\n                                            seg2.CMODALI,\n                                            seg2.CTIPSEG,\n                                            seg2.CCOLECT,\n                                            seg2.CACTIVI,\n                                            seg2.CRESERVA\n                                        FROM\n                                            cdp_ods.SISAXIS_SEGUROS SEG2,\n                                            cdp_ods.SISAXIS_CTR_DESAGRUPASEG CONV\n                                        WHERE\n                                            seg2.cagrseg = conv.cagrseg(+)\n                                        AND ncertif > 0 ) k\n                                WHERE\n                                    k.NCERTIF > 0\n                                GROUP BY\n                                    k.NPOLIZA ) w\n                        ON\n                            (\n                                w.NPOLIZA = seg.NPOLIZA )\n                            -- End Query from Temp Table FLOTA in VENTA_LIBERTY\n                        WHERE --seg.SSEGURO IN (900327438,900250970,900327424,900372586,900327400,\n                            -- 900334130,900331236,900332401,900373592,900367654,900331218,\n                            -- 900332365)\n                            --and\n                            seg.ncertif > 0\n                        AND seg.CRAMO=6\n                        AND seg.CSITUAC = 0\nand w.Flota='No' ) ST2 ) RENO\n            -- END  2nd TEMP TABLE ITEM_RENOVACION_VHNOFLOTA (LOAD * Resident ITEM_VHNF Where\n            -- Id.Situacion= 0)\n        ON\n            (\n                RENO.Patente_norm2 = ST1.Patente_norm\n            AND RENO.RUT_ASEG2 = ST1.RUT_ASEG\n            AND RENO.INI_VIGENCIA2=ST1.FEFECTO)\n    )\n    ,\n\t\n\tITEM_OTROS as (SELECT\nseg.SSEGURO, seg.CRAMO, seg.NPOLIZA, seg.NCERTIF, seg.FEFECTO, DECODE(seg.CDURACI,3, seg.FVENCIM,0, seg.FCARPRO) FVENCIM, seg.CSITUAC,\nx.NNUMNIF as  Rut_Contratante, w.Count_Items, w.Flota\nfrom cdp_ods.SISAXIS_SEGUROS SEG\nLEFT JOIN  \n(\nselect s.sseguro,p.NNUMNIF from cdp_ods.sisaxis_tomadores t\n\t\t\tinner join cdp_ods.sisaxis_seguros s\n\t\t\ton t.sseguro=s.sseguro and s.ncertif>0\n\t\t\tleft join cdp_ods.sisaxis_personas p\n\t\t\ton t.sperson=p.sperson\n) x ON (seg.SSEGURO=x.SSEGURO)\n\nLEFT JOIN\n(\n-- Begin Query from Temp Table FLOTA in VENTA_LIBERTY\nSelect k.NPOLIZA, Count(k.SSEGURO) as Count_Items, CASE WHEN Count(k.SSEGURO)>=10 THEN 'Si' ELSE 'No' END as Flota\nFROM\n(\nselect  \nseg2.SSEGURO, seg2.CRAMO, seg2.CAGENTE, seg2.NPOLIZA, seg2.NCERTIF, seg2.FEFECTO, seg2.COBJASE, seg2.CTIPCOA,substr(seg2.CAGENTE,-3,8) CSUCURSAL,\nseg2.CTIPCOM, DECODE(seg2.CDURACI,3, seg2.FVENCIM,0, seg2.FCARPRO) FVENCIM, seg2.FANULAC, DECODE(seg2.CSITUAC,0,'Vigente',2,'Anulado/Cancelado',5,'Endoso Pendiente','Otro') SITUAC,\nseg2.SCIACOA, seg2.PPARCOA, seg2.SPRODUC, seg2.CMONSEG, seg2.FCAMBIO, seg2.CLINNEG, seg2.CAGRSEG, seg2.CRFAAGE SCICLO, seg2.CFLOTA, seg2.CSITUAC, seg2.NPROPM,        \nDECODE(cast( SUBSTR(seg2.CAGENTE,1,5)as integer), 7527, 'Retail',  8204, 'Retail',  7723, 'Retail',  3376, 'Retail',  3424, 'Retail',\nDECODE (CONV.CFLOTA, 1, DECODE(cast(SUBSTR(seg2.CAGENTE,-3,8)as integer), 24, 'Banca', 25, 'Banca', 'Flota'), 'Individual' )) CANAL,\n--sisaxis.f_clasificacion_fecu(seg2.sseguro) clasificacion_fecu ,\nseg2.CMODALI,\nseg2.CTIPSEG,\nseg2.CCOLECT,\nseg2.CACTIVI,\nseg2.CRESERVA\n\nFROM    cdp_ods.SISAXIS_SEGUROS SEG2,  cdp_ods.SISAXIS_CTR_DESAGRUPASEG CONV\nwhere   seg2.cagrseg = conv.cagrseg(+)\nand ncertif > 0\n\n\n) k\nWHERE k.NCERTIF > 0\nGroup by k.NPOLIZA\n) w ON (w.NPOLIZA = seg.NPOLIZA )\n-- End Query from Temp Table FLOTA in VENTA_LIBERTY\nWHERE --seg.SSEGURO IN (900327438,900250970,900327424,900372586,900327400,900334130,900331236,900332401,900373592,900367654,900331218,900332365)\n--and \nseg.ncertif > 0\nand ((SEG.CRAMO=6 AND w.Count_Items>=10) or SEG.CRAMO<>6) AND SEG.CRAMO<>16 \nAND SEG.SPRODUC not in (452,500,686,842,861,438,439,820,822,856)\n)\n, ITEM_OTROS_1 as \n(\nSELECT a.CRAMO,a.CSITUAC,a.SSEGURO, case when isnull(b.sseguro,0)>0 then 'SI' else 'NO' end as ITEM_RENOVACION \nFROM ITEM_OTROS a \nleft join \nITEM_OTROS b on\na.CRAMO = b.CRAMO AND a.Rut_Contratante = b.Rut_Contratante AND a.fefecto=b.fvencim\nand b.CSITUAC = 0 ),\n\n\t\n\nITEM_RENO_NR as(SELECT\nsseguro,\n            SSEGURO AS [ID_ITEM],\n            CRAMO   AS [ID_RAMO],\n            seg.NPOLIZA,\n            NCERTIF AS ITEM,\n            CSITUAC AS [ID_SITUACION]\n           \n        FROM\n            CDP_ODS.sisaxis_seguros seg\n         WHERE\n            seg.NCERTIF >0\n           AND (seg.CRAMO=16 or SEG.SPRODUC in (452,500,686,842,861,438,439,820,822,856)))\n\n    \nSELECT\n    --fact_renovaciones_integrado_key,\n    MAX_SID,\n    src_sys_cd ,\n    policy_item_id ,\n    policy_num ,\n    policy_exp_dt ,\n    policy_status_desc ,\n    facultativo_ind ,\n    coins_type_cd ,\n    curr_cd ,\n    fecultative_premium_amt ,\n    broker_comm_amt ,\n    dim_lob_key ,\n    dim_broker_key ,\n    dim_branch_office_key ,\n    dim_policyholder_key ,\n    policyholder_rut_num ,\n    dim_prd_pln_hrchy_key ,\n    dim_insured_key ,\n    insured_rut_num ,\n    --rec_crt_dtm,\n    --rec_updt_dtm,\n    --actv_rec_ind,\n    etl_audit_id ,\n    policy_item_num ,\n    policy_issue_dt ,\n    policy_eff_dt ,\n    acct_yr ,\n    acct_mth ,\n    agreement ,\n    flota,\n    valid_ind,\n    NVL(document_type,'Endoso') AS document_type,\n    item_renovated_ind,\n    sales_type,\n    cycle_number,\n    cycle_state,\n    renovation_type,\n    item_type,\n    Lob_mkt_ref_code,\n    PATENTE,\n    gwp_amt,\n    affects_direct_premium_amt ,\n    exempt_direct_premium_amt ,\n    CAST(new_direct_premium_amt AS NUMERIC(25,10)),\n    CAST(renewal_direct_premium_amt AS NUMERIC(25,10)),\n    CAST(endorsement_direct_premium_amt AS NUMERIC(25,10)),\n    mv_id,\n    mv_reason_cd,\n    mv_reason_desc\nFROM\n    (\n        SELECT DISTINCT\n            --CAST(nvl(LKP.MAX_SID,0)+ num AS INTEGER) as fact_renovaciones_integrado_key,\n            LKP.MAX_SID,\n            CAST(SRC.src_sys_cd AS VARCHAR(10)),\n            CAST(CAST(SRC.policy_item_id AS INTEGER) AS VARCHAR(35)) ,\n            CAST(SRC.policy_num AS VARCHAR(35)),\n            CAST(SRC.policy_exp_dt AS DATE),\n            CAST(SRC. policy_status_desc AS VARCHAR(80)),\n            CAST(SRC.facultativo_ind AS CHAR(1)),\n            CAST(CAST(SRC.coins_type_cd AS INTEGER) AS VARCHAR(10)) ,\n            CAST(SRC.curr_cd AS VARCHAR(10)),\n            CAST(SRC.fecultative_premium_amt AS NUMERIC(25,10)),\n            CAST(SRC.broker_comm_amt AS NUMERIC(25,10)),\n            --CAST(SRC.dim_policy_key AS INTEGER),\n            CAST(SRC.dim_lob_key AS INTEGER),\n            CAST(SRC.dim_broker_key AS INTEGER),\n            CAST(SRC.dim_branch_office_key AS INTEGER),\n            CAST(SRC.dim_policyholder_key AS INTEGER),\n            CAST(SRC.policyholder_rut_num AS VARCHAR(80)),\n            CAST(SRC.dim_prd_pln_hrchy_key AS INTEGER),\n            CAST(SRC.dim_insured_key AS INTEGER),\n            CAST(SRC.insured_rut_num AS VARCHAR(80)),\n            SYSDATE AS rec_crt_dtm,\n            SYSDATE AS rec_updt_dtm,\n            'Y'     AS actv_rec_ind,\n            CAST(SRC.etl_audit_id AS INTEGER),\n            CAST(SRC.policy_item_num AS INTEGER),\n            CAST(SRC.policy_issue_dt AS DATE),\n            CAST(SRC.policy_eff_dt AS DATE),\n            CAST(isnull(SRC.acct_yr,(select cast(to_char(add_months(max(fcierre),1),'yyyy') as integer) \n            from cdp_ods.sisaxis_cierres where cestado=1 and ctipo=7)) AS VARCHAR(4)) as acct_yr,\n            CAST(isnull(SRC.acct_mth,(select RIGHT(0 || cast(to_char(add_months(max(fcierre),1),'mm') as integer),2) \n            from cdp_ods.sisaxis_cierres where cestado=1 and ctipo=7)) AS VARCHAR(2)) as acct_mth,\n            CAST(SRC.agreement AS VARCHAR(10)),\n            --LKP.MAX_SID,\n            CASE pol_count.pcount\n                WHEN pol_count.pcount>=10\n                AND SRC.cramo=6\n                THEN 'SI'\n                WHEN pol_count.pcount<10\n                AND SRC.cramo=6\n                THEN 'NO'\n                ELSE '-'\n            END AS flota,\n            CASE\n                WHEN SRC.PDATE >= SYSDATE\n                THEN 'SI'\n                ELSE 'NO'\n            END AS valid_ind,\n            --CICLO.document_type as document_type,\n            CASE\n                WHEN CAST(SRC.mv_id AS INTEGER )=1\n                THEN 'Propuesta'\n                WHEN DOC_TYPE.doc_type IS NULL\n                THEN 'Endoso'\n                ELSE DOC_TYPE.doc_type\n            END AS document_type,\n            --CASE pol_count.item_count when pol_count.item_count>0 then 'SI' else 'NO' end as\n            -- item_renovated_ind,\n            NVL(ITEM_RENO_IND.ITEM_RENOVACION,'NO') AS item_renovated_ind,\n            CASE\n                WHEN document_type='Propuesta'\n                THEN\n                    CASE\n                        WHEN item_renovated_ind='SI'\n                        THEN 'Renovacion'\n                        ELSE 'Venta Nueva'\n                    END\n                ELSE 'Endoso'\n            END                       AS sales_type,\n            TRUNC(CICLO.cycle_number) AS cycle_number,\n            CICLO.cycle_state         AS cycle_state,\n            CICLO.RENOVATION_TYPE     AS renovation_type,\n            SRC.item_type             AS item_type,\n            SRC.Lob_mkt_ref_code      AS Lob_mkt_ref_code,\n            SRC.PATENTE               AS PATENTE,\n            CAST(SRC.gwp_amt AS NUMERIC(25,10)),\n            CAST(SRC.affects_direct_premium_amt AS NUMERIC(25,10)),\n            CAST(SRC.exempt_direct_premium_amt AS NUMERIC(25,10)),\n            --NVL(dir_amt.PRIMA_DIR,0) as gwp_amt,\n            --NVL(dir_amt.PRIMA_AFE_DIR,0) AS affects_direct_premium_amt,\n            --NVL(dir_amt.PRIMA_EXE_DIR,0) AS exempt_direct_premium_amt,\n            CASE\n                WHEN sales_type='Venta Nueva'\n                THEN gwp_amt\n                ELSE 0\n            END AS new_direct_premium_amt,\n            CASE\n                WHEN sales_type='Renovacion'\n                THEN gwp_amt\n                ELSE 0\n            END AS renewal_direct_premium_amt,\n            CASE\n                WHEN sales_type='Endoso'\n                THEN gwp_amt\n                ELSE 0\n            END AS endorsement_direct_premium_amt,\n            SRC.mv_id,\n            SRC.mv_reason_cd,\n            SRC.mv_reason_desc\n        FROM\n            (\n                SELECT\n                    MAX(num)                AS num,\n                    MAX(AA.policy_num)         policy_num,\n                    MAX(AA.curr_cd)            curr_cd,\n                    MAX(AA.policy_issue_dt)    policy_issue_dt,\n                    AA.policy_item_id ,\n                    MAX(AA.dim_lob_key)             dim_lob_key ,\n                    MAX(AA.dim_policy_key)          dim_policy_key,\n                    MAX(AA.dim_broker_key)          dim_broker_key,\n                    MAX(AA.dim_branch_office_key)   dim_branch_office_key,\n                    MAX(AA.dim_insured_key)         dim_insured_key,\n                    MAX(AA.insured_rut_num)         insured_rut_num,\n                    MAX(AA.dim_policyholder_key)    dim_policyholder_key,\n                    MAX(AA.policyholder_rut_num)    policyholder_rut_num,\n                    MAX(AA.dim_prd_pln_hrchy_key)   dim_prd_pln_hrchy_key,\n                    MAX(AA.src_sys_cd)              src_sys_cd,\n                    MAX(AA.policy_eff_dt)           policy_eff_dt,\n                    MAX(AA.policy_exp_dt)           policy_exp_dt,\n                    1                               AS etl_audit_id,\n                    MAX(AA.coins_type_cd )             coins_type_cd,\n                    MAX(AA.facultativo_ind)            facultativo_ind,\n                    MAX(AA.policy_status_desc)         policy_status_desc,\n                    SUM(AA.fecultative_premium_amt)    fecultative_premium_amt,\n                    MAX(AA.policy_item_num)            policy_item_num,\n                    SUM(NVL(AA.coins_amt,0))        AS coins_amt,\n                    SUM(AA.gwp_amt)                    gwp_amt,\n                    SUM(AA.afecta_amt)              AS affects_direct_premium_amt,\n                    SUM(AA.exenta_amt)              AS exempt_direct_premium_amt,\n                    SUM(AA.broker_comm_amt)            broker_comm_amt,\n                    AA.acct_yr,\n                    AA.acct_mth,\n                    MAX(AA.agreement)        agreement,\n                    1                        AS DUMMY,\n                    MAX(AA.PDATE)               PDATE,\n                    MAX(AA.item_type)           item_type,\n                    MAX(AA.Lob_mkt_ref_code)    Lob_mkt_ref_code,\n                    MAX(AA.PATENTE)             PATENTE,\n                    MAX(AA.cramo)            AS cramo,\n                    AA.mv_id,\n                    MAX(AA.mv_reason_cd)   AS mv_reason_cd ,\n                    MAX(AA.mv_reason_desc) AS mv_reason_desc\n                    --ROW_NUMBER()OVER(PARTITION BY AA.policy_item_id,AA.src_sys_cdORDER BY\n                    -- AA.fmovimi DESC) RNK\n                FROM\n                    (\n                        SELECT\n                            row_number()over( ORDER BY SEG.npoliza, SEG.sseguro) AS num,\n                            CAST(SEG.npoliza AS INTEGER)                         AS policy_num,\n                            SEG.cmonseg                                          AS curr_cd,\n                            SEG.FEMISIO                                          AS policy_issue_dt\n                            ,\n                            CAST(SEG.sseguro AS INTEGER)               AS policy_item_id,\n                            NVL(LOB.dim_lob_key,0)                     AS dim_lob_key,\n                            NVL(POLICY.dim_policy_key,0)               AS dim_policy_key,\n                            NVL(BRKR_KEY.dim_broker_key,0)             AS dim_broker_key,\n                            NVL(BRANCH_OFFICE.dim_branch_office_key,0)     AS dim_branch_office_key,\n                            NVL(INSURED.dim_insured_key,0)                  AS dim_insured_key,\n                            NVL(INSURED.insured_rut_num,'0')                AS insured_rut_num,\n                            NVL(POL_HOLD.dim_policyholder_key,0)            AS dim_policyholder_key,\n                            NVL(POL_HOLD.policyholder_rut_num,'0')          AS policyholder_rut_num,\n                            NVL(PLAN_HIRE.dim_prd_pln_hrchy_key,0)         AS dim_prd_pln_hrchy_key,\n                            'axis'                                          AS src_sys_cd,\n                            SEG.FEFECTO                                     AS policy_eff_dt,\n                            DECODE(SEG.CDURACI,3, SEG.FVENCIM, SEG.FCARPRO) AS policy_exp_dt,\n                            SEG.cagrseg                                     AS agreement,\n                            SEG.CTIPCOA                                     AS coins_type_cd,\n                            --CASE WHEN FACULATIVE_IND.CNT >= 1 THEN 'Y' ELSE 'N' END AS\n                            -- facultativo_ind,\n                            CASE\n                                WHEN NVL(AMT_SRC_FEC_AMT.fecultative_premium_amt,0) <> 0\n                                THEN 'Y'\n                                ELSE 'N'\n                            END                                         AS facultativo_ind,\n                            STG.ref_desc                                   AS policy_status_desc,\n                            NVL(AMT_SRC_FEC_AMT.fecultative_premium_amt,0) AS\n                                                                fecultative_premium_amt,\n                            NVL(AMT_SRC_2.broker_comm_amt,0)      AS broker_comm_amt,\n                            NVL(AMT_SRC_2.gwp_amt,0)              AS gwp_amt,\n                            NVL(AMT_SRC_2.afecta_amt,0)           AS afecta_amt,\n                            NVL(AMT_SRC_2.exenta_amt,0)           AS exenta_amt,\n                            (AMT_SRC_2.gwp_amt*(SEG.PPARCOA/100)) AS coins_amt,\n                            MOVE_SEG.fmovimi,\n                            SEG.ncertif AS policy_item_num,\n                            CAL.axis_acct_yr_num as acct_yr,\n                            RIGHT(0 || CAL.axis_acct_mth_num, 2)  as acct_mth,\n                            --SUBSTRING(ACCT.FCONTAB,1,4) AS acct_yr,\n                            --case when ACCT.FCONTAB > (select max(fconta) from\n                            -- cdp_ods.sisaxis_his_cuadre02) THEN '12' ELSE SUBSTRING(ACCT.FCONTAB,\n                            -- 6,2)END as acct_mth,\n                            --SUBSTRING(ACCT.FCONTAB,6,2) AS acct_mth,\n                            ACCT.FCONTAB , --added for DID-215\n                            CASE\n                                WHEN SEG.FANULAC IS NULL\n                                THEN SEG.FVENCIM\n                                ELSE SEG.FANULAC\n                            END           AS PDATE,\n                            item.cnt_sseg AS cnt_sseg,\n                            CASE\n                                WHEN item.cnt_sseg < 10\n                                AND SEG.cramo=6\n                                THEN 'No Flota'\n                                WHEN SEG.cramo=16\n                                OR  SEG.sproduc IN (452,500,686,842,861,438,439,820,822,856)\n                                --OR  SEG.csituac <> 0\n                                OR  SEG.ncertif=0\n                                THEN 'No Renovables'\n                                ELSE 'Otros'\n                            END                       AS item_type,\n                            mktrefcd.Lob_mkt_ref_code AS Lob_mkt_ref_code,\n                            CASE\n                                WHEN SEG.CRAMO=6\n                                THEN T2.CMATRIC\n                                ELSE NULL\n                            END AS PATENTE,\n                            SEG.cramo,\n                            CAST(MOVE_SEG.NMOVIMI AS INTEGER) AS mv_id,\n                            MOVE_SEG.CMOTMOV                  AS mv_reason_cd,\n                            STG1.ref_desc                     AS mv_reason_desc,\n                            ROW_NUMBER() OVER(PARTITION BY SEG.sseguro,MOVE_SEG.nmovimi ORDER BY\n                            ACCT.FCONTAB DESC) RNK\n                        FROM\n                            (\n                                SELECT\n                                    SG.sseguro,\n                                    MV_G.nmovimi\n                                FROM\n                                    cdp_stg_dwh.sisaxis_seguros SG\n                                INNER JOIN\n                                    cdp_ods.sisaxis_movseguro MV_G\n                                ON\n                                    MV_G.sseguro=SG.sseguro\n                                AND SG.ncertif > 0\n                                UNION\n                                SELECT\n                                    sseguro,\n                                    nmovimi\n                                FROM\n                                    cdp_stg_dwh.sisaxis_movseguro\n                                UNION\n                                SELECT\n                                    sseguro,\n                                    nmovima AS nmovimi\n                                FROM\n                                    cdp_stg_dwh.sisaxis_riesgos\n                                UNION\n                                SELECT\n                                    CES.sseguro,\n                                    RIE.nmovima AS nmovimi\n                                FROM\n                                    cdp_stg_dwh.sisaxis_cesionesrea CES\n                                INNER JOIN\n                                    cdp_ods.sisaxis_riesgos RIE\n                                ON\n                                    CES.sseguro=RIE.sseguro\n                                AND CES.nriesgo=RIE.nriesgo\n                                UNION\n                                SELECT\n                                    CES.sseguro,\n                                    RIE.nmovima AS nmovimi\n                                FROM\n                                    cdp_ods.sisaxis_cesionesrea CES\n                                INNER JOIN\n                                    cdp_ods.sisaxis_riesgos RIE\n                                ON\n                                    CES.sseguro=RIE.sseguro\n                                AND CES.nriesgo=RIE.nriesgo\n                                INNER JOIN\n                                    cdp_stg_dwh.sisaxis_cuacesfac CUAC\n                                ON\n                                    CUAC.sfacult=CES.sfacult\n                                UNION\n                                SELECT\n                                    SEG.sseguro,\n                                    MOVE_SEG.nmovimi\n                                FROM\n                                    (\n                                        SELECT\n                                            *\n                                        FROM\n                                            cdp_ods.sisaxis_seguros\n                                        WHERE\n                                            ncertif > 0) SEG\n                                INNER JOIN\n                                    (\n                                        SELECT DISTINCT\n                                            sseguro,\n                                            nmovimi\n                                        FROM\n                                            cdp_ods.sisaxis_movseguro) MOVE_SEG\n                                ON\n                                    MOVE_SEG.sseguro=SEG.sseguro\n                                INNER JOIN\n                                    cdp_ods.sisaxis_movrec2movseg M2\n                                ON\n                                    M2.nmovimi=MOVE_SEG.nmovimi\n                                AND M2.sseguro = MOVE_SEG.sseguro\n                                INNER JOIN\n                                    cdp_ods.sisaxis_movrecibo MV_RECIBO\n                                ON\n                                    MV_RECIBO.smovrec=M2.smovrec\n                                INNER JOIN\n                                    cdp_ods.sisaxis_recibos RECIBOS\n                                ON\n                                    RECIBOS.nrecibo=MV_RECIBO.nrecibo\n                                INNER JOIN\n                                    cdp_stg_dwh.sisaxis_detrecibos DET_RECIBOS\n                                ON\n                                    DET_RECIBOS.nrecibo=RECIBOS.nrecibo\n                                UNION\n                                SELECT DISTINCT\n                                    SEG.sseguro,\n                                    MOVE_SEG.nmovimi\n                                FROM\n                                    (\n                                        SELECT\n                                            *\n                                        FROM\n                                            cdp_ods.sisaxis_seguros\n                                        WHERE\n                                            ncertif > 0 ) SEG\n                                INNER JOIN\n                                    (\n                                        SELECT DISTINCT\n                                            sseguro,\n                                            nmovimi\n                                        FROM\n                                            cdp_ods.sisaxis_movseguro) MOVE_SEG\n                                ON\n                                    MOVE_SEG.sseguro=SEG.sseguro\n                                INNER JOIN\n                                    cdp_ods.sisaxis_riesgos RSEG\n                                ON\n                                    MOVE_SEG.sseguro = RSEG.sseguro\n                                AND MOVE_SEG.nmovimi = RSEG.nmovima\n                                INNER JOIN\n                                    cdp_ods.sisaxis_cesionesrea CESION\n                                ON\n                                    RSEG.sseguro = CESION.sseguro\n                                AND RSEG.nriesgo = CESION.nriesgo\n                                INNER JOIN\n                                    cdp_stg_dwh.sisaxis_cuadroces CUADROCES\n                                ON\n                                    CUADROCES.scontra=CESION.scontra\n                                AND CUADROCES.ctramo=CESION.ctramo\n                                UNION\n                                SELECT DISTINCT\n                                    SEG.sseguro,\n                                    MOVE_SEG.nmovimi\n                                FROM\n                                    (\n                                        SELECT\n                                            *\n                                        FROM\n                                            cdp_ods.sisaxis_seguros\n                                        WHERE\n                                            ncertif > 0 ) SEG\n                                INNER JOIN\n                                    (\n                                        SELECT DISTINCT\n                                            sseguro,\n                                            nmovimi\n                                        FROM\n                                            cdp_ods.sisaxis_movseguro) MOVE_SEG\n                                ON\n                                    MOVE_SEG.sseguro=SEG.sseguro\n                                INNER JOIN\n                                    cdp_ods.sisaxis_riesgos RSEG\n                                ON\n                                    MOVE_SEG.sseguro = RSEG.sseguro\n                                AND MOVE_SEG.nmovimi = RSEG.nmovima\n                                INNER JOIN\n                                    cdp_ods.sisaxis_cesionesrea CESION\n                                ON\n                                    RSEG.sseguro = CESION.sseguro\n                                AND RSEG.nriesgo = CESION.nriesgo\n                                INNER JOIN\n                                    cdp_stg_dwh.sisaxis_codicontratos CONDI\n                                ON\n                                    CONDI.scontra=CESION.scontra )DRIVER\n                        INNER JOIN\n                            (\n                                SELECT DISTINCT\n                                    sseguro,\n                                    nmovimi,\n                                    cmotmov,\n                                    FMOVIMI,\n                                    FEMISIO,\n                                    FMOVVTO,\n                                    FEFECTO,\n                                    FCONTAB\n                                FROM\n                                    cdp_ods.sisaxis_movseguro) MOVE_SEG\n                        ON\n                            DRIVER.sseguro=MOVE_SEG.sseguro\n                        AND DRIVER.nmovimi=MOVE_SEG.nmovimi\n                        INNER JOIN\n                            (\n                                SELECT\n                                    npoliza,\n                                    cmonseg,\n                                    sseguro,\n                                    CRAMO,\n                                    cagente,\n                                    FEFECTO,\n                                    CDURACI,\n                                    csituac,\n                                    FVENCIM,\n                                    FEMISIO,\n                                    FCARPRO,\n                                    cagrseg,\n                                    CTIPCOA,\n                                    PPARCOA,\n                                    ncertif,\n                                    FANULAC,\n                                    sproduc\n                                FROM\n                                    cdp_ods.sisaxis_seguros\n                                WHERE\n                                    ncertif > 0 ) SEG\n                        ON\n                            MOVE_SEG.sseguro=SEG.sseguro\n                        LEFT OUTER JOIN\n                            (\n                                SELECT\n                                    npoliza,\n                                    COUNT(sseguro) AS cnt_sseg\n                                FROM\n                                    cdp_ods.sisaxis_seguros\n                                GROUP BY\n                                    npoliza) item\n                        ON\n                            SEG.npoliza=item.npoliza\n                        LEFT JOIN\n                            (\n                                SELECT\n                                    A1.*\n                                FROM\n                                    CDP_ODS.SISAXIS_AUTRIESGOS A1\n                                INNER JOIN\n                                    (\n                                        SELECT\n                                            SSEGURO,\n                                            MAX(NMOVIMI) AS NMOVIMI,\n                                            MAX(NRIESGO) AS NRIESGO\n                                        FROM\n                                            CDP_ODS.SISAXIS_AUTRIESGOS\n                                        GROUP BY\n                                            SSEGURO) A2\n                                ON\n                                    A1.SSEGURO = A2.SSEGURO\n                                AND A1.NMOVIMI = A2.NMOVIMI\n                                AND A1.NRIESGO = A2.NRIESGO ) T2\n                        ON\n                            DRIVER.SSEGURO = T2.SSEGURO\n                        AND DRIVER.nmovimi=T2.nmovimi\n                            --And  DRIVER.CRAMO  = 6\n                        LEFT JOIN\n                            cdp_ods.sisaxis_riesgos RSEG\n                        ON\n                            MOVE_SEG.sseguro = RSEG.sseguro\n                        AND MOVE_SEG.nmovimi = RSEG.nmovima\n                        LEFT JOIN\n                            (\n                                SELECT DISTINCT\n                                    sseguro,\n                                    nriesgo\n                                FROM\n                                    cdp_ods.sisaxis_cesionesrea) CESION\n                        ON\n                            RSEG.sseguro = CESION.sseguro\n                        AND RSEG.nriesgo = CESION.nriesgo\n                        LEFT JOIN\n                            cdp_dwh.dim_policy_t POLICY\n                        ON\n                            CAST(CAST(SEG.npoliza AS INTEGER) AS VARCHAR(35))=POLICY.policy_num\n                        AND POLICY.src_sys_cd='axis'\n                        LEFT JOIN\n                            cdp_dwh.dim_lob_t LOB\n                        ON\n                            CAST(CAST(SEG.CRAMO AS INTEGER) AS VARCHAR(10)) =LOB.lob_cd\n                        AND LOB.src_sys_cd='axis'\n                        LEFT JOIN\n                            (\n                                SELECT DISTINCT\n                                    BRKR.dim_broker_key,\n                                    AA.sseguro\n                                FROM\n                                    (\n                                        SELECT DISTINCT\n                                            BRKR_RLSHP.entity_rut_num,\n                                            SEG.sseguro\n                                        FROM\n                                            (\n                                                SELECT\n                                                    cagente,\n                                                    sseguro,\n                                                    npoliza\n                                                FROM\n                                                    cdp_ods.sisaxis_seguros\n                                                WHERE\n                                                    ncertif > 0) SEG\n                                        INNER JOIN\n                                            cdp_dwh.broker_branch_rlshp_t BRKR_RLSHP\n                                        ON\n                                            SEG.cagente=BRKR_RLSHP.rlshp_src_id\n                                        AND BRKR_RLSHP.entity_type_cd=4\n                                        AND BRKR_RLSHP.src_sys_cd='axis')AA\n                                INNER JOIN\n                                    cdp_dwh.dim_broker_t BRKR\n                                ON\n                                    AA.entity_rut_num=BRKR.broker_id ) BRKR_KEY\n                        ON\n                            BRKR_KEY.sseguro=SEG.sseguro\n                        LEFT JOIN\n                            (\n                                SELECT\n                                    A.sseguro,\n                                    A.nmovimi,\n                                    INSURED.dim_insured_key,\n                                    INSURED.insured_rut_num\n                                FROM\n                                    (\n                                        SELECT\n                                            tmp2.sseguro,\n                                            tmp2.nmovimi,\n                                            tmp2.sperson,\n                                            tmp2.cdomici\n                                        FROM\n                                            (\n                                                SELECT\n                                                    tmp1.sseguro,\n                                                    tmp1.nriesgo,\n                                                    tase.nmovima,\n                                                    tase.sperson,\n                                                    tase.cdomici,\n                                                    tmp1.nmovimi,\n                                                    row_number() over( partition BY tmp1.sseguro,\n                                                    tmp1.nriesgo, tmp1.nmovimi ORDER BY tase.norden\n                                                    DESC ) AS row_ind\n                                                FROM\n                                                    (\n                                                        SELECT\n                                                            tmov.sseguro,\n                                                            tmov.nmovimi,\n                                                            trie.nriesgo,\n                                                            trie.sperson,\n                                                            trie.cdomici,\n                                                            row_number() over( partition BY\n                                                            tmov.sseguro, tmov.nmovimi ORDER BY\n                                                            trie.nmovima DESC ) AS row_ind\n                                                        FROM\n                                                            (\n                                                                SELECT DISTINCT\n                                                                    sseguro\n                                                                FROM\n                                                                    cdp_ods.sisaxis_seguros\n                                                                WHERE\n                                                                    ncertif > 0 ) tseg\n                                                        INNER JOIN\n                                                            cdp_ods.sisaxis_movseguro tmov\n                                                        ON\n                                                            tseg.sseguro = tmov.sseguro\n                                                        INNER JOIN\n                                                            cdp_ods.sisaxis_riesgos trie --\n                                                        ON\n                                                            tmov.sseguro = trie.sseguro\n                                                        AND tmov.nmovimi >= trie.nmovima ) tmp1\n                                                INNER JOIN\n                                                    cdp_ods.sisaxis_asegurados tase\n                                                ON\n                                                    tmp1.sseguro = tase.sseguro\n                                                AND tmp1.nriesgo = tase.nriesgo\n                                                AND tmp1.nmovimi >= tase.nmovima\n                                                AND (\n                                                        tmp1.nmovimi < tase.nmovimb\n                                                    OR  tase.nmovimb IS NULL )\n                                                WHERE\n                                                    tmp1.row_ind = 1 ) tmp2\n                                        WHERE\n                                            tmp2.row_ind = 1\n                                        GROUP BY\n                                            tmp2.sseguro,\n                                            tmp2.nmovimi,\n                                            tmp2.sperson,\n                                            tmp2.cdomici\n                                        ORDER BY\n                                            tmp2.sseguro,\n                                            tmp2.nmovimi,\n                                            tmp2.sperson,\n                                            tmp2.cdomici) A\n                                INNER JOIN\n                                    cdp_dwh.dim_insured_t INSURED\n                                ON\n                                    INSURED.insured_id=CAST(A.sperson AS INTEGER)\n                                AND INSURED.address_id=CAST(NVL(A.cdomici,0) AS INTEGER)\n                                    /*Added as part of CDP-238 */\n                                AND INSURED.src_sys_cd='axis')INSURED\n                        ON\n                            INSURED.sseguro=SEG.sseguro\n                        AND INSURED.nmovimi=MOVE_SEG.nmovimi\n                        LEFT JOIN\n                            (\n                                SELECT\n                                    ref_cd,\n                                    ref_desc\n                                FROM\n                                    cdp_stg_dwh.stg_tref_code_map_variant\n                                WHERE\n                                    src_sys_cd='axis'\n                                AND ref_type_cd='policy_status_cd') STG\n                        ON\n                            CAST(CAST(csituac AS INTEGER) AS VARCHAR(20))=STG.ref_cd\n                        LEFT JOIN\n                            (\n                                SELECT\n                                    *\n                                FROM\n                                    cdp_stg_dwh.stg_tref_code_map_variant\n                                WHERE\n                                    src_sys_cd='axis'\n                                AND ref_type_cd='movement_cd') STG1\n                        ON\n                            CAST(CAST(MOVE_SEG.cmotmov AS INTEGER) AS VARCHAR(20))=STG1.ref_cd\n                        LEFT JOIN\n                            (\n                                SELECT\n                                    ref_cd,\n                                    mkt_ref_code AS Lob_mkt_ref_code\n                                FROM\n                                    cdp_stg_dwh.stg_tref_code_map_variant\n                                WHERE\n                                    src_sys_cd = 'axis'\n                                AND ref_type_cd ='lob') mktrefcd\n                        ON\n                            SEG.CRAMO=mktrefcd.ref_cd\n                        LEFT JOIN\n                            cdp_dwh.dim_branch_office_t BRANCH_OFFICE\n                        ON\n                            LTRIM(RIGHT(SEG.cagente,3),0)=LTRIM(BRANCH_OFFICE.branch_office_cd,0)\n                        AND BRANCH_OFFICE.src_sys_cd='axis'\n                        LEFT JOIN\n                            cdp_dwh.dim_region_t REGN\n                        ON\n                            RIGHT(SEG.cagente,3)=REGN.region_cd\n                        LEFT JOIN\n                            (\n                                SELECT DISTINCT\n                                    POL_HOLD.dim_policyholder_key,\n                                    POL_HOLD.policyholder_rut_num,\n                                    AA.sseguro\n                                FROM\n                                    (\n                                        SELECT\n                                            CAST(CAST(TOMA.SPERSON AS INTEGER)||'-'||CAST(NVL\n                                            (TOMA.CDOMICI,0) AS INTEGER) AS VARCHAR(35)) AS\n                                            TOMA_HLD_ID,\n                                            SEG.sseguro\n                                        FROM\n                                            (\n                                                SELECT\n                                                    sseguro,\n                                                    npoliza\n                                                FROM\n                                                    cdp_ods.sisaxis_seguros\n                                                WHERE\n                                                    ncertif > 0) SEG\n                                            --INNER JOIN cdp_dwh.dim_policy_t POLICY\n                                            --ON CAST(CAST(SEG.npoliza AS INTEGER) AS VARCHAR(35))=\n                                            -- POLICY.policy_num\n                                            --AND POLICY.src_sys_cd='axis'\n                                        INNER JOIN\n                                            cdp_ods.sisaxis_tomadores TOMA\n                                        ON\n                                            SEG.SSEGURO=CAST(TOMA.sseguro AS INTEGER))AA\n                                INNER JOIN\n                                    cdp_dwh.dim_policyholder_t POL_HOLD\n                                ON\n                                    AA.TOMA_HLD_ID=POL_HOLD.policyholder_id\n                                AND POL_HOLD.src_sys_cd='axis')POL_HOLD\n                        ON\n                            SEG.sseguro=POL_HOLD.sseguro\n                        LEFT JOIN\n                            (\n                                SELECT\n                                    PLAN_HIRE.dim_prd_pln_hrchy_key,\n                                    SEG.sseguro\n                                FROM\n                                    (\n                                        SELECT\n                                            sseguro,\n                                            sproduc,\n                                            cramo,\n                                            cactivi\n                                        FROM\n                                            cdp_ods.sisaxis_seguros\n                                        WHERE\n                                            ncertif > 0) SEG\n                                INNER JOIN\n                                    cdp_dwh.dim_prd_pln_hrchy_t PLAN_HIRE\n                                ON\n                                    PLAN_HIRE.prd_cd=CAST(CAST(SEG.sproduc AS INTEGER) AS VARCHAR\n                                    (10))\n                                AND PLAN_HIRE.lob_cd=CAST(CAST(SEG.cramo AS INTEGER) AS VARCHAR(10)\n                                    )\n                                AND PLAN_HIRE.pln_cd=CAST(CAST(SEG.cactivi AS INTEGER) AS VARCHAR\n                                    (10))\n                                AND PLAN_HIRE.src_sys_cd='axis')PLAN_HIRE\n                        ON\n                            PLAN_HIRE.sseguro=SEG.sseguro\n                            /*\n                            LEFT JOIN(\n                            SELECT COUNT(*) AS CNT,SEG.sseguro\n                            FROM\n                            (select sseguro from cdp_ods.sisaxis_seguros WHERE ncertif > 0) SEG\n                            INNER JOIN (SELECT DISTINCT sseguro\n                            FROM  cdp_ods.sisaxis_movseguro) MOVE_SEG\n                            ON MOVE_SEG.sseguro=SEG.sseguro\n                            LEFT JOIN cdp_ods.sisaxis_riesgos RSEG\n                            ON MOVE_SEG.sseguro = RSEG.sseguro\n                            LEFT JOIN cdp_ods.sisaxis_cesionesrea CESION\n                            ON RSEG.sseguro = CESION.sseguro\n                            AND RSEG.nriesgo = CESION.nriesgo\n                            LEFT JOIN cdp_ods.sisaxis_cuacesfac CUACESFAC\n                            ON CUACESFAC.sfacult=CESION.sfacult\n                            LEFT JOIN cdp_ods.sisaxis_cuadroces CUADROCES\n                            ON CUADROCES.scontra=CESION.scontra\n                            AND CUADROCES.ctramo=CESION.ctramo\n                            WHERE CAST(CESION.ctramo AS INTEGER) in (4,5)\n                            AND CAST(CESION.cgenera AS INTEGER)<>2\n                            GROUP BY SEG.sseguro\n                            )FACULATIVE_IND\n                            ON FACULATIVE_IND.sseguro=SEG.sseguro\n                            */\n                        LEFT OUTER JOIN\n                            cdp_ods.sisaxis_movrec2movseg MACCT\n                        ON\n                            MACCT.nmovimi=MOVE_SEG.nmovimi\n                        AND MACCT.sseguro = MOVE_SEG.sseguro\n                        LEFT OUTER JOIN\n                            cdp_ods.sisaxis_movrecibo ACCT\n                        ON\n                            ACCT.smovrec=MACCT.smovrec\n                        LEFT JOIN\n                            cdp_dwh.dim_cal_t CAL\n                        ON\n                            CAL.cal_dt=CAST(ACCT.FCONTAB AS DATE)\n                        LEFT JOIN\n                            (\n                                SELECT\n                                    SUM(AMT_SRC_FEC_AMT.fecultative_premium_amt) AS\n                                                                            fecultative_premium_amt,\n                                    SUM(AMT_SRC_FEC_AMT.fecultative_premium_amt) AS cwp_amt_2,\n                                    AMT_SRC_FEC_AMT.sseguro,\n                                    AMT_SRC_FEC_AMT.ncertif ,\n                                    AMT_SRC_FEC_AMT.nmovimi\n                                FROM\n                                    (\n                                        SELECT\n                                            NVL(CC.fecultative_premium_amt,0)\n                                            fecultative_premium_amt,\n                                            CC.sseguro,\n                                            CC.ncertif,\n                                            CC.nmovimi\n                                        FROM\n                                            (\n                                                SELECT\n                                                    AA.fecultative_premium_amt,\n                                                    AA.sseguro,\n                                                    AA.ncertif,\n                                                    AA.nmovimi\n                                                FROM\n                                                    (\n                                                        SELECT\n                                                            CASE\n                                                                WHEN (BB.CESION_CTRAMO=5\n                                                                    OR  BB.CESION_CTRAMO=4)\n                                                                AND CESION_cgenera <>2\n                                                                THEN BB.icesmon\n                                                                ELSE 0\n                                                            END AS fecultative_premium_amt,\n                                                            BB.sseguro,\n                                                            BB.ncertif,\n                                                            BB.icesmon,\n                                                            BB.pcesion,\n                                                            BB.nmovimi\n                                                        FROM\n                                                            (\n                                                                SELECT\n                                                                    CESION.icesmon,\n                                                                    CESION.pcesion,\n                                                                    CAST(CESION.CTRAMO AS INTEGER)\n                                                                    AS CESION_CTRAMO,\n                                                                    CESION.PCUOPAR,\n                                                                    SEG.sseguro,\n                                                                    SEG.ncertif,\n                                                                    CAST(CESION.cgenera AS INTEGER)\n                                                                    AS CESION_cgenera,\n                                                                    CAST(CONDI.ctiprea AS INTEGER),\n                                                                    MOVE_SEG.nmovimi\n                                                                FROM\n                                                                    (\n                                                                        SELECT\n                                                                            sseguro,\n                                                                            ncertif\n                                                                        FROM\n                                                                            cdp_ods.sisaxis_seguros\n                                                                        WHERE\n                                                                            ncertif > 0) SEG\n                                                                INNER JOIN\n                                                                    (\n                                                                        SELECT DISTINCT\n                                                                            sseguro,\n                                                                            nmovimi\n                                                                        FROM\n                                                                            cdp_ods.sisaxis_movseguro\n                                                                    ) MOVE_SEG\n                                                                ON\n                                                                    MOVE_SEG.sseguro=SEG.sseguro\n                                                                LEFT JOIN\n                                                                    cdp_ods.sisaxis_riesgos RSEG\n                                                                ON\n                                                                    MOVE_SEG.sseguro = RSEG.sseguro\n                                                                AND MOVE_SEG.nmovimi = RSEG.nmovima\n                                                                LEFT JOIN\n                                                                    cdp_ods.sisaxis_cesionesrea\n                                                                    CESION\n                                                                ON\n                                                                    RSEG.sseguro = CESION.sseguro\n                                                                AND MOVE_SEG.nmovimi =\n                                                                    CESION.nmovigen\n                                                                    --AND RSEG.nriesgo =\n                                                                    -- CESION.nriesgo\n                                                                LEFT JOIN\n                                                                    cdp_ods.sisaxis_codicontratos\n                                                                    CONDI\n                                                                ON\n                                                                    CONDI.scontra=CESION.scontra )\n                                                            BB )AA )CC )AMT_SRC_FEC_AMT\n                                GROUP BY\n                                    AMT_SRC_FEC_AMT.sseguro,\n                                    AMT_SRC_FEC_AMT.ncertif,\n                                    AMT_SRC_FEC_AMT.nmovimi )AMT_SRC_FEC_AMT\n                        ON\n                            AMT_SRC_FEC_AMT.sseguro=MOVE_SEG.sseguro\n                        AND AMT_SRC_FEC_AMT.nmovimi=MOVE_SEG.nmovimi\n                        LEFT JOIN\n                            (\n                              \nSELECT\n    SUM(AMT_SRC_2.broker_comm_amt) AS broker_comm_amt,\n    SUM(AMT_SRC_2.dir_mo)         AS gwp_amt,\n    SUM(AMT_SRC_2.aff_mo)      AS afecta_amt,\n    SUM(AMT_SRC_2.exe_mo)      AS exenta_amt,\n    AMT_SRC_2.sseguro,\n    AMT_SRC_2.nmovimi\n    \n\nfrom\n(\nselect CASE\n               WHEN m.cestrec=2\n               AND d.cconcep=11\n               THEN (d.ICONCEP*-1)\n               WHEN r.ctiprec=9\n               AND d.cconcep=11\n               THEN (d.ICONCEP*-1)\n               WHEN r.ctiprec=11\n               AND d.cconcep=11\n               THEN (d.ICONCEP*1)\n               ELSE NULL\n           END AS broker_comm_amt,\nx.smovrec, x.sseguro, x.nrecibo, x.nmovimi, m.fcontab, \n       (select max(r2.cmonseg) from cdp_ods.sisaxis_recibos r2 where x.sseguro = r2.sseguro) as ccy, \n        m.cestrec, r.ctiprec, d.cconcep, d.cgarant, d.iconcep, \n       decode(m.cestrec,2,-1,1) as cestrec_check, decode(r.ctiprec,9,-1,1) as ctiprec_check,\n       s.sproduc, p.cramo, p.cmodali, p.ctipseg, p.ccolect,\n       z.cvalpar,\n       decode(z.cvalpar,1,'A','exe') as Aff_Exe_Check,\n       decode(m.cestrec,2,-1,1)*decode(r.ctiprec,9,-1,1)*d.iconcep as dir_mo,\n       decode(z.cvalpar,1,(decode(m.cestrec,2,-1,1)*decode(r.ctiprec,9,-1,1)*d.iconcep),0) as aff_mo,\n       decode(decode(z.cvalpar,1,'A','exe'),'exe',(decode(m.cestrec,2,-1,1)*decode(r.ctiprec,9,-1,1)*d.iconcep),0) as exe_mo     \nfrom cdp_ods.sisaxis_movrec2movseg x\nleft join cdp_ods.sisaxis_seguros s     on (s.sseguro = x.sseguro)\nleft join cdp_ods.sisaxis_movrecibo m   on (x.nrecibo = m.nrecibo and x.smovrec = m.smovrec)\nleft join cdp_ods.sisaxis_recibos r     on (x.nrecibo = r.nrecibo)\n--x.sseguro = r.sseguro and   x.nmovimi = r.nmovimi)\nleft join cdp_ods.sisaxis_detrecibos d  on (x.nrecibo = d.nrecibo and d.cconcep=0 and d.iconcep<>0)\nleft join cdp_ods.sisaxis_productos p   on (p.sproduc = s.sproduc)\nleft join cdp_ods.sisaxis_pargaranpro z on (z.cactivi = s.cactivi and z.cgarant = d.cgarant and z.cramo = p.cramo and z.cmodali = p.cmodali and\n                                            z.ctipseg = p.ctipseg and z.ccolect = p.ccolect and z.cpargar = 'IND_IVA')\nwhere\n  m.fcontab > (SELECT MAX(fconta) FROM cdp_ods.sisaxis_his_cuadre02 )\norder by  x.smovrec, x.sseguro, x.nrecibo, x.nmovimi, d.cgarant\n) AMT_SRC_2 \n\ngroup by AMT_SRC_2.sseguro,\n        AMT_SRC_2.nmovimi\n )AMT_SRC_2\n                        ON\n                            AMT_SRC_2.sseguro=SEG.sseguro\n                        AND AMT_SRC_2.nmovimi=MOVE_SEG.nmovimi )AA\n                WHERE\n                    AA.RNK=1\n                AND fcontab >\n                    (\n                        SELECT\n                            MAX(fconta)\n                        FROM\n                            cdp_ods.sisaxis_his_cuadre02)\n                GROUP BY\n                    policy_item_id,\n                    acct_yr,\n                    acct_mth ,\n                    mv_id )SRC\n        LEFT OUTER JOIN\n            (\n                SELECT\n                    npoliza,\n                    COUNT(ncertif) AS pcount\n                FROM\n                    cdp_ods.sisaxis_seguros\n                   where ncertif>0\n                GROUP BY\n                    npoliza) pol_count\n        ON\n            CAST(SRC.policy_num AS INTEGER)=CAST(pol_count.npoliza AS INTEGER)\n            /*LEFT OUTER JOIN\n            (\n            select FCONTA,sseguro,\n            sum(PRIMA_DIR) as PRIMA_DIR, sum(PRIMA_AFE_DIR) as PRIMA_AFE_DIR,\n            sum(PRIMA_EXE_DIR) as PRIMA_EXE_DIR from (\n            SELECT  FCONTA,\n            SSEGURO, NCERTIF, NPOLIZA, PRIMA_TARIFA PRIMA_DIR, IPRIAFE_DIR PRIMA_AFE_DIR,\n            IPRIEXE_DIR PRIMA_EXE_DIR\n            FROM cdp_ods.SISAXIS_HIS_CUADRE02\n            )\n            group by FCONTA,sseguro\n            ) dir_amt\n            on src.policy_item_id=dir_amt.sseguro\n            LEFT OUTER JOIN\n            (\n            select a.[ID_ITEM],case when isnull(b.[ID_ITEM],0)>0 then 'SI' else 'NO'  end as\n            ITEM_RENOVADO  from ITEM_RENO a\n            left join ITEM_RENO as b\n            on a.[ID_ITEM]=b.[ID_ITEM] and b.[ID_SITUACION]=0\n            ) ITEM_RENO_IND\n            ON SRC.policy_item_id=ITEM_RENO_IND.[ID_ITEM]*/\n        LEFT JOIN\n            (\n               select sseguro as [ID_ITEM],sseguro, ITEM_RENOVACION from ITEM_RENO_NOFLOTA \n\t\t\t   where ITEM_RENOVACION='SI'\n           union\n           select sseguro as [ID_ITEM],sseguro,ITEM_RENOVACION from ITEM_OTROS_1 where ITEM_RENOVACION='SI'\n           union \n           select sseguro as [ID_ITEM],sseguro,'NO'as ITEM_RENOVACION from ITEM_RENO_NR) ITEM_RENO_IND\n        ON\n            SRC.policy_item_id=ITEM_RENO_IND.[ID_ITEM]\n        LEFT OUTER JOIN\n            (\n                SELECT\n                    NPOLIZA,\n                    CYCLE_NUMBER,\n                    CYCLE_STATE,\n                    CASE\n                        WHEN CYCLE_STATE='Rechazado'\n                        OR  CYCLE_STATE='Eliminado'\n                        THEN 'X'\n                        WHEN CORIGEN=7\n                        THEN 'M'\n                        WHEN COBJASE=5\n                        THEN 'A'\n                        WHEN CRENOVA_PRO=1\n                        THEN 'A'\n                        ELSE 'S'\n                    END AS RENOVATION_TYPE,\n                    NMOVIMI\n                FROM\n                    (\n                        SELECT\n                            M.SCICLO     AS CYCLE_NUMBER,\n                            M.NPOLIZAANT AS NPOLIZA,\n                            M.CORIGEN,\n                            M.CRENOVA,\n                            M.CRENOVPE,\n                            N.NMOVIMI,\n                            O.testado AS CYCLE_STATE,\n                            P.NRO_LINEA,\n                            P.ID_PROCESO,\n                            P.COD_PRODUC,\n                            P.DESC_ESTADO,\n                            P.ESTADO_PROC,\n                            Q.COBJASE,\n                            R.CRENOVA_PRO\n                        FROM\n                            (\n                                SELECT\n                                    y.SCICLO,\n                                    y.NPOLIZAANT,\n                                    y.CORIGEN,\n                                    y.CRENOVA,\n                                    y.CRENOVPE\n                                FROM\n                                    CMI_PROPUESTA_1 Y\n                                INNER JOIN\n                                    (\n                                        SELECT\n                                            m1.NPOLIZAANT,\n                                            MAX(m1.SCICLO) AS SCICLO\n                                        FROM\n                                            CMI_PROPUESTA_1 m1\n                                        WHERE\n                                            m1.CORIGEN IN (5,7)\n                                        GROUP BY\n                                            m1.NPOLIZAANT) X\n                                ON\n                                    Y.NPOLIZAANT=X.NPOLIZAANT\n                                AND Y.SCICLO=X.SCICLO )M\n                        LEFT JOIN\n                            (\n                                SELECT\n                                    SCICLO,\n                                    CESTADO,\n                                    NMOVIMI\n                                FROM\n                                    (\n                                        SELECT\n                                            SCICLO,\n                                            CESTADO,\n                                            NMOVIMI,\n                                            ROW_NUMBER() OVER (PARTITION BY SCICLO ORDER BY NMOVIMI\n                                            DESC) rnk\n                                        FROM\n                                            (\n                                                SELECT\n                                                    SCICLO,\n                                                    CESTADO,\n                                                    NMOVIMI\n                                                FROM\n                                                    CMI_MOVPROPUESTA_15\n                                                GROUP BY\n                                                    SCICLO,\n                                                    CESTADO,\n                                                    NMOVIMI ))\n                                WHERE\n                                    RNK=1 ) N\n                        ON\n                            M.SCICLO=N.SCICLO\n                        LEFT JOIN\n                            (\n                                SELECT\n                                    csistema,\n                                    ccodigo,\n                                    tdescripcion AS testado--,'1' as orden\n                                FROM\n                                    CDP_ODS.sisaxis_cmi_estados\n                                WHERE\n                                    csistema=15 ) O\n                        ON\n                            N.CESTADO = O.CCODIGO\n                        LEFT JOIN\n                            (\n                                SELECT\n                                    SCICLO,\n                                    COD_PRODUC,\n                                    DESC_ESTADO,\n                                    ESTADO_PROC,\n                                    NRO_LINEA,\n                                    ID_PROCESO\n                                FROM\n                                    (\n                                        SELECT\n                                            SCICLO,\n                                            COD_PRODUC,\n                                            DESC_ESTADO,\n                                            ESTADO_PROC,\n                                            NRO_LINEA,\n                                            ID_PROCESO,\n                                            ROW_NUMBER() OVER (PARTITION BY SCICLO ORDER BY\n                                            NRO_LINEA DESC, ID_PROCESO DESC) rnk\n                                        FROM\n                                            (\n                                                SELECT\n                                                    NUM_CICLO AS SCICLO,\n                                                    COD_PRODUC,\n                                                    DESC_ESTADO,\n                                                    ESTADO          AS ESTADO_PROC,\n                                                    MAX(NRO_LINEA)  AS NRO_LINEA,\n                                                    MAX(ID_PROCESO) AS ID_PROCESO\n                                                FROM\n                                                    DET\n                                                WHERE\n                                                    COD_EMPRESA='LIBERTY'\n                                                AND COD_FORMATO='RENOVACION'\n                                                AND ESTADO <> 'E'\n                                                AND ESTADO <> 'E_CEL'\n                                                GROUP BY\n                                                    SCICLO,\n                                                    COD_PRODUC,\n                                                    DESC_ESTADO,\n                                                    ESTADO_PROC ))\n                                WHERE\n                                    RNK=1 ) P\n                        ON\n                            M.SCICLO=P.SCICLO\n                        LEFT OUTER JOIN\n                            (\n                                SELECT\n                                    SPRODUC AS COD_PRODUC,\n                                    COBJASE\n                                FROM\n                                    PROD ) Q\n                        ON\n                            P.COD_PRODUC=Q.COD_PRODUC\n                        LEFT OUTER JOIN\n                            (\n                                SELECT DISTINCT\n                                    SPRODUCN AS COD_PRODUC,\n                                    CRENOVA  AS CRENOVA_PRO\n                                FROM\n                                    (\n                                        SELECT\n                                            SPRODUCA,\n                                            SPRODUCN,\n                                            CRENOVA\n                                        FROM\n                                            CDP_ODS.SISAXIS_HOMOLOGA_PRODUCTOS) ) R\n                        ON\n                            P.COD_PRODUC=R.COD_PRODUC ) ) CICLO\n        ON\n            SRC.policy_num=CICLO.npoliza\n        LEFT OUTER JOIN\n            (\n                SELECT\n                    x.sseguro  AS sseguro ,\n                    x.nmovimis AS nmovimis,\n                    CASE\n                        WHEN CMI_PROPUESTA_1.ctipdoc=1\n                        THEN 'Propuesta'\n                        ELSE 'Endoso'\n                    END AS doc_type\n                FROM\n                    (\n                        SELECT\n                            sseguro,\n                            nmovimis,\n                            sciclo\n                        FROM\n                            DOC ) x\n                LEFT JOIN\n                    CMI_PROPUESTA_1\n                ON\n                    x.sciclo=CMI_PROPUESTA_1.sciclo )DOC_TYPE\n        ON\n            SRC.policy_item_id=DOC_TYPE.sseguro\n        AND SRC.mv_id=DOC_TYPE.nmovimis\n            /*LEFT OUTER JOIN\n            (select sseguro, count(nsinies) as claim_count from cdp_ods.sisaxis_siniestros group by\n            sseguro) SNSTRS\n            ON SRC.policy_item_id=SNSTRS.sseguro */\n        LEFT JOIN\n            (\n                SELECT\n                    1                                    AS DUMMY,\n                    MAX(fact_renovaciones_integrado_key) AS MAX_SID\n                FROM\n                    cdp_dwh.temp_fact_renovaciones_integrado_t) LKP\n        ON\n            LKP.DUMMY=SRC.DUMMY )"
    },
    {
        "type": "customQuery",
        "path": "content.transformations[1].dataAdapter.object.customQuery",
        "value": "SELECT\nSTG.fact_renovaciones_integrado_key,\nSTG.policy_item_id,\nSTG.src_sys_cd,\nSTG.acct_yr,\nSTG.acct_mth,\nSTG.mv_id\nFROM  cdp_dwh.temp_fact_renovaciones_integrado_t_test STG\nWHERE STG.src_sys_cd='axis' --"
    }
]