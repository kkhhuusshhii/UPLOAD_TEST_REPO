[
    {
        "type": "customQuery",
        "path": "content.transformations[0].dataAdapter.object.customQuery",
        "value": "Select \ncast('axis' as varchar(10)) as src_sys_cd,\ncast(driver.claim_num as varchar(35)) AS claim_num,\ncast(driver.claimant_num as integer) as claimant_num,\ncast(driver.loss_item_num as integer) as loss_item_num,\ncast(driver.curr_code as varchar(10)) as curr_code,\nnvl(cast(claim_t.dim_claim_key as integer),0) as dim_claim_key,\nnvl(cast(claim_Analyst_t.dim_claim_analyst_key as integer),0) as dim_claim_analyst_key,\nnvl(cast(dim_branch_office.dim_branch_office_key as integer),0) as dim_branch_office_key,\nnvl(cast(claim_adjuster_t.dim_claim_adjuster_key as integer),0) as dim_claim_adjuster_key,\nnvl(cast(dim_claim_status.dim_claim_status_key as integer),0) as dim_claim_status_key, \nnvl(cast(claim_type_t.dim_claim_type_key as integer),0) as dim_claim_type_key,\nnvl(cast(lob_t.dim_lob_key as integer),0) as dim_lob_key,\nnvl(cast(claimant_t.dim_claimant_key as integer),0) as dim_claimant_key,\nnvl(cast(loss_item_t.dim_loss_item_key as integer),0) as dim_loss_item_key,\ncast(0 as integer) as dim_bodyshop_location_key,\n--nvl(cast(bdshp_t.dim_bdshp_key as integer),0) as dim_bdshp_key,  -- Column not available in ddl\ncast(reparacion.AUOR_FE_REGISTRO as date) as first_order_dt,\n--cast (claim_open.FMOVIMI as date) AS claim_open_dt,\ncast (claim_open.FENTRAD as date) AS claim_open_dt,\ncast(claim_close.FMOVIMI as date) AS claim_close_dt,\ncast(claim_reject.FMOVIMI as date) AS claim_rejection_dt,\ncast(claim_cancel.FMOVIMI as date) AS claim_cancel_dt,\ncast(claim_reopen.FMOVIMI as date)  AS claim_reopen_dt,\ncast(task_cnt.task_count as integer) as tasks_count,\ncast(nvl(est_loss_amt.total_estd_loss_amt,0) as numeric(25,10)) as total_estd_loss_amt,\n--nvl(cast(case when reservasinitrami.FRESFIN is null then cast(reservasinitrami.IRESERV as numeric(25,10)) else 0 end as numeric(25,10)),0) as total_claim_reserve_amt,  \ncast(nvl(reservasinitrami.reserve_amt,0) as numeric(25,10)) as total_claim_reserve_amt,\ncast(nvl(total_loss.total_loss_payment_amt,0) as numeric(25,10)) as total_loss_payment_amt,\n/*nvl(cast(case when pagosinitrami.CTIPPAG = 3 then cast(total_loss.total_loss_payment_amt*(-1) as numeric(25,10)) \n        else cast(total_loss.total_loss_payment_amt as numeric(25,10)) end as numeric(25,10)),0) as total_loss_payment_amt, */\n--cast(nvl(recovery_legal_cost.toatl_recovery_legal_amt - payment_legal_cost.total_payment_legal_amt ,0) as numeric(25,10)) as total_lgl_fees_amt,\ncast(nvl(legal_cost.total_legal_cost_amt,0) as numeric(25,10)) as total_lgl_fees_amt, \ncast(nvl(labor_cost.total_labor_cost_amt,0) as numeric(25,10))as total_labor_cost_amt,\ncast(nvl(spare_parts_cost.total_repuestos,0) as numeric(25,10)) as total_spare_parts_cost_amt,\ncast(nvl(accessory_cost.total_accesorios,0) as numeric(25,10)) as total_accessory_cost_amt,\ncast(nvl(deductible_amt.total_deductible_amt,0) as numeric(25,10)) as total_deductible_amt,\ncast(0 as numeric(25,10)) as total_other_expense_amt, \ncast(0 as numeric(25,10)) as total_recov_expense_amt,\ncast(nvl(recov_cost.total_recov_cost_amt,0) as numeric(25,10)) as total_recov_amt,\n/*nvl(cast(case when pagosinitrami.CTIPPAG = 8 then cast(recov_cost.total_recov_cost_amt*(-1) as numeric(25,10)) \n       else cast(recov_cost.total_recov_cost_amt as numeric(25,10)) end as numeric(25,10)),0) as total_recov_amt,*/\ncast(nvl(total_order_cost.total_order_cost_amt,0) as numeric(25,10)) as total_adj_amt,\ncast(total_adj.total_adj_count as integer) as total_adj_count,\ncast(total_awarded_adj.total_awarded_adj_count as integer) as total_awarded_adj_count,\ncast(nvl(total_discount.total_discount_amt,0) as numeric(25,10)) as total_discount_amt,\ncast(total_order.total_order_count as integer) as total_order_count,\ncast(nvl(total_other_income.total_other_income_amt,0) as numeric(25,10)) as total_other_income_amt,\n/*nvl(cast(case when pagosinitrami.CTIPPAG = 9 then cast(total_other_income.total_other_income_amt*(-1) as numeric(25,10)) \n        else cast(total_other_income.total_other_income_amt as numeric(25,10)) end as numeric(25,10)),0) as total_other_income_amt, ---*/\n'Y' as latest_record_ind,\ndriver.record_eff_dtm as record_eff_dtm, \ncast(LKP.MAX_SID as integer) as MAX_SID\n\nfrom cdp_stg_dwh.stg_fact_loss_history_t_axis_driver driver\n\ninner join cdp_ods.sisaxis_siniestros siniestros\non SINIESTROS.NSINIES = driver.claim_num\n\n\n--DID222\nleft outer join (\n  select \n    drvr.claim_num,\n    drvr.claimant_num,\n    drvr.curr_code,\n    drvr.record_eff_dtm,\n    sperson,\n    row_number() over( \n      partition by \n        drvr.claim_num,\n        drvr.claimant_num,\n        drvr.curr_code,\n        drvr.record_eff_dtm\n      order by\n        tpag.falta desc,\n        sperson\n    ) as rowindex\n  from\n    cdp_stg_dwh.stg_fact_loss_history_t_axis_driver drvr\n    left outer join cdp_stg_dwh.sisaxis_pagosinitrami tpag\n      on drvr.claim_num = tpag.nsinies \n      and drvr.claimant_num = tpag.ntramit \n      and drvr.curr_code = tpag.cmonpag \n      and drvr.record_eff_dtm >= cast( tpag.falta as date ) \n      and tpag.ctipdes = 4  --DID196\n  ) pagosinitrami\n    on driver.claim_num = pagosinitrami.claim_num\n    and driver.claimant_num = pagosinitrami.claimant_num\n    and driver.curr_code = pagosinitrami.curr_code\n    and driver.record_eff_dtm = pagosinitrami.record_eff_dtm\n    and pagosinitrami.rowindex = 1\n--DID222 end\n\n--left outer join cdp_stg_dwh.sisaxis_reservasinitrami reservasinitrami on \n--driver.claim_num=reservasinitrami.NSINIES and driver.claimant_num=reservasinitrami.NTRAMIT\n--and driver.curr_code=reservasinitrami.CMONRES and driver.record_eff_dtm=cast(reservasinitrami.FALTA as date)\nleft outer join (\nSELECT distinct\n    cast(nvl(reservasinitrami.ireserv,0) as numeric(25,10))as reserve_amt,\n    cast(reservasinitrami.nsinies as varchar(35)) AS claim_num,\n    cast(reservasinitrami.ntramit as integer) as claimant_num,\n    cast(reservasinitrami.ntramit as integer) as loss_item_num,\n    cast(reservasinitrami.CMONRES as varchar(10)) as curr_code,\n    cast(driver.record_eff_dtm as date) as record_eff_dtm,\n    row_number() over(partition by reservasinitrami.nsinies,reservasinitrami.ntramit,reservasinitrami.CMONRES,cast(driver.record_eff_dtm as date) order by reservasinitrami.falta desc ) as row_nums\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver driver\ninner join (select sum(ireserv) ireserv ,nsinies,ntramit,CMONRES,cast(FALTA as date) from cdp_ods.sisaxis_reservasinitrami group by 2,3,4,5) reservasinitrami on \ndriver.claim_num=reservasinitrami.NSINIES and driver.claimant_num=reservasinitrami.NTRAMIT\nand driver.curr_code=reservasinitrami.CMONRES and driver.record_eff_dtm>=cast(reservasinitrami.FALTA as date)) reservasinitrami\non reservasinitrami.claim_num = driver.claim_num\nand reservasinitrami.claimant_num = driver.claimant_num\nand reservasinitrami.curr_code=driver.curr_code\nand reservasinitrami.record_eff_dtm=driver.record_eff_dtm\nand reservasinitrami.row_nums = 1\n\nleft outer join cdp_stg_dwh.SISSINIESTRO_AUTT_ORDENES_REPARACION REPARACION1 on \ndriver.claim_num=REPARACION1.AUOR_SISI_NU_SINIESTRO and driver.claimant_num=REPARACION1.AUOR_NU_IMPLICADO\nand driver.curr_code='CLP' and driver.record_eff_dtm=cast(REPARACION1.AUOR_FE_REGISTRO as date)\n\n/*left outer join (select a.AUDL_AUOR_NU_SINIESTRO AS claim_num, b.AUOR_NU_IMPLICADO  as claimant_num,b.AUOR_NU_IMPLICADO  as loss_item_num,\n'CLP' as curr_code, cast(current_timestamp as date) as record_eff_dtm  from cdp_stg_dwh.sissiniestro_autt_detalle_ordenes a\nINNER JOIN cdp_ods.sissiniestro_autt_ordenes_reparacion b ON a.audl_auor_nu_siniestro=b.AUOR_SISI_NU_SINIESTRO \n   AND a.audl_auor_nu_orden = b.AUOR_NU_ORDEN_REPARACION    AND a.audl_auor_nu_ajuste= b.auor_auad_nu_ajuste) sub1 \n   on driver.claim_num=sub1.claim_num and driver.claimant_num=sub1.claimant_num\nand driver.curr_code='CLP' and driver.record_eff_dtm=sub1.record_eff_dtm*/\n   \nleft outer join (select dim_claim_key,claim_num from  cdp_dwh.dim_claim_t where src_sys_cd='axis') claim_t\non cast(driver.claim_num as varchar(35))= claim_t.claim_num\n\nleft outer join (select dim_claim_analyst_key,claim_Analyst_id from  cdp_dwh.dim_claim_Analyst_t where src_sys_cd= 'axis' ) claim_Analyst_t\non cast(pagosinitrami.SPERSON as integer)=claim_Analyst_t.claim_Analyst_id\n\nleft join (select ref_cd,mkt_ref_code from cdp_stg_dwh.stg_tref_code_map_variant where ref_type_cd='branch_office' and src_sys_cd = 'axis') branch_office\non right( '00000000' + cast( substring(siniestros.CTRAINT,2) as varchar), 8)=branch_office.ref_cd\nleft join \n(select dim_branch_office_key,branch_office_cd from cdp_dwh.dim_branch_office_t where src_sys_cd='axis') dim_branch_office\non NVL(branch_office.mkt_ref_code,right( '00000000' + cast( substring(siniestros.CTRAINT,2) as varchar), 8)) = dim_branch_office.branch_office_cd\n\nleft join \n(select dim_claim_status_key,claim_status_cd from cdp_dwh.dim_claim_status_t where src_sys_cd='axis') dim_claim_status\non  CAST(cast(siniestros.CESTSIN as INT)AS varchar(10)) = dim_claim_status.claim_status_cd\n\nleft outer join (select dim_claim_adjuster_key,adjuster_id from  cdp_dwh.dim_claim_adjuster_t where src_sys_cd= 'axis' ) claim_adjuster_t\non cast(pagosinitrami.SPERSON as integer)=claim_adjuster_t.adjuster_id\n\n\nleft outer join (select dim_claim_type_key,claim_type_cd from cdp_dwh.dim_claim_type_t where src_sys_cd='axis') claim_type_t\non CAST(CAST(siniestros.CCAUSIN AS INT) AS VARCHAR(20))=claim_type_t.claim_type_cd\n\nleft outer join (select dim_lob_key,lob_cd from cdp_dwh.dim_lob_t where src_sys_cd='axis') lob_t\nON CAST(CAST(siniestros.CRAMO AS INT) AS VARCHAR(20))=lob_t.lob_cd\n\nleft outer join (select dim_claimant_key,claim_num,claimant_id,claimant_num from cdp_dwh.dim_claimant_t where src_sys_cd='axis') claimant_t \nON claimant_t.claim_num=driver.claim_num\nAND claimant_t.claimant_num=CAST(driver.claimant_num AS INT)\n\nleft outer join (select dim_loss_item_key,claim_num,loss_item_id,loss_item_num from cdp_dwh.dim_loss_item_t where src_sys_cd='axis') loss_item_t \nON  loss_item_t.claim_num=cast(driver.claim_num as integer)\nAND loss_item_t.loss_item_num=CAST(driver.claimant_num AS INT)\n\nleft outer join \n(select min(AUOR_FE_REGISTRO) AUOR_FE_REGISTRO,AUOR_SISI_NU_SINIESTRO,AUOR_NU_IMPLICADO \nfrom cdp_ods.sissiniestro_autt_ordenes_reparacion group by 2,3) reparacion\non reparacion.AUOR_SISI_NU_SINIESTRO=driver.claim_num\nand reparacion.AUOR_NU_IMPLICADO =driver.claimant_num\n\nleft outer join (\n/**Commented based on Confirmation from Guillermo on Mar-7-2019, see line 622 in the data mapping sheet**/\n/*select min(m.FMOVIMI) FMOVIMI,t.NSINIES,t.NTRAMIT from cdp_ods.sisaxis_tramitacionsini t \ninner join cdp_ods.sisaxis_movsiniestro m\non t.NSINIES = m.NSINIES\nand t.NTRAMIT = m.NTRAMIT\nand   m.CESTADO = 0\nand   t.NTRAMIT > 0 group by 2,3*/\nSELECT NSINIES,FENTRAD from CDP_ODS.SISAXIS_SINIESTROS\n) claim_open\non claim_open.NSINIES = driver.claim_num\n--and claim_open.NTRAMIT =driver.claimant_num\n\nleft outer join (select max(m.FMOVIMI) FMOVIMI,t.NSINIES,t.NTRAMIT from cdp_ods.sisaxis_tramitacionsini t \ninner join cdp_ods.sisaxis_movsiniestro m\non t.NSINIES = m.NSINIES\nand t.NTRAMIT = m.NTRAMIT\nand   m.CESTADO = 1\nand   t.NTRAMIT > 0 \ninner join cdp_stg_dwh.stg_fact_loss_history_t_axis_driver d \non m.NSINIES=d.claim_num and m.NTRAMIT=d.claimant_num and cast(m.FMOVIMI as date) <= cast(d.record_eff_dtm as date)\ngroup by 2,3) claim_close\non claim_close.NSINIES = driver.claim_num\nand claim_close.NTRAMIT =driver.claimant_num  \nand cast(claim_close.FMOVIMI as date) <= cast(driver.record_eff_dtm as date) \n\nleft outer join (select max(m.FMOVIMI) FMOVIMI,t.NSINIES,t.NTRAMIT from cdp_ods.sisaxis_tramitacionsini t \ninner join cdp_ods.sisaxis_movsiniestro m\non t.NSINIES = m.NSINIES\nand t.NTRAMIT = m.NTRAMIT\nand   m.CESTADO = 3\nand   t.NTRAMIT > 0 \ninner join cdp_stg_dwh.stg_fact_loss_history_t_axis_driver d \non m.NSINIES=d.claim_num and m.NTRAMIT=d.claimant_num and cast(m.FMOVIMI as date) <= cast(d.record_eff_dtm as date)\ngroup by 2,3) claim_reject\non claim_reject.NSINIES = driver.claim_num\nand claim_reject.NTRAMIT =driver.claimant_num and cast(claim_reject.FMOVIMI as date) <= cast(driver.record_eff_dtm as date)\n\nleft outer join (select max(m.FMOVIMI) FMOVIMI,t.NSINIES,t.NTRAMIT from cdp_ods.sisaxis_tramitacionsini t \ninner join cdp_ods.sisaxis_movsiniestro m\non t.NSINIES = m.NSINIES\nand t.NTRAMIT = m.NTRAMIT\nand   m.CESTADO = 2\nand   t.NTRAMIT > 0 \ninner join cdp_stg_dwh.stg_fact_loss_history_t_axis_driver d \non m.NSINIES=d.claim_num and m.NTRAMIT=d.claimant_num and cast(m.FMOVIMI as date) <= cast(d.record_eff_dtm as date)\ngroup by 2,3) claim_cancel\non claim_cancel.NSINIES = driver.claim_num\nand claim_cancel.NTRAMIT =driver.claimant_num and cast(claim_cancel.FMOVIMI as date) <= cast(driver.record_eff_dtm as date)\n\nleft outer join (select max(m.FMOVIMI) FMOVIMI,t.NSINIES,t.NTRAMIT from cdp_ods.sisaxis_tramitacionsini t \ninner join cdp_ods.sisaxis_movsiniestro m\non t.NSINIES = m.NSINIES\nand t.NTRAMIT = m.NTRAMIT\nand   m.CESTADO = 4\nand   t.NTRAMIT > 0\ninner join cdp_stg_dwh.stg_fact_loss_history_t_axis_driver d \non m.NSINIES=d.claim_num and m.NTRAMIT=d.claimant_num and cast(m.FMOVIMI as date) <= cast(d.record_eff_dtm as date)\ngroup by 2,3) claim_reopen\non claim_reopen.NSINIES = driver.claim_num\nand claim_reopen.NTRAMIT =driver.claimant_num and cast(claim_reopen.FMOVIMI as date) <= cast(driver.record_eff_dtm as date)\n\n--############ task_cnt ########--\n\nleft outer join\n(\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(task_sub.task_count as integer) as task_count,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.falta DESC  ) as row_num1\nFROM (select * from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code='CLP') driver_sub\nleft outer join \n(select SRC.NSINIES,SRC.NTRAMIT,SRC.falta,SRC.task_count,SRC.curr_code,\nrow_number() over(partition by SRC.NSINIES,SRC.NTRAMIT,SRC.falta  order by row_nums DESC  ) as row_num\nfrom\n(\nselect t.NSINIES,t.NTRAMIT,cast(t.falta as date) as falta, d.curr_code,\ncount(*) over (partition by t.NSINIES,t.NTRAMIT order by cast(t.falta as date) rows unbounded preceding) as task_count\n           ,row_number() over(partition by t.NSINIES,t.NTRAMIT,cast(t.falta as date) order by cast(t.falta as date)  desc  ) as row_nums\n       from cdp_ods.sisaxis_tramitacionsini t\ninner join cdp_ods.sisaxis_cmi_movpropuesta m\non m. SCICLO =  t.NSINIES\nand m. NMOVIMI =  t.NTRAMIT \nand   m.NMOVIMI  > 0  \ninner join (select distinct claim_num,claimant_num,curr_code from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code='CLP' ) d \non t.NSINIES=d.claim_num and t.NTRAMIT=d.claimant_num  \nand d.curr_code='CLP'\n) SRC) task_sub\non task_sub.NSINIES = driver_sub.claim_num\nand task_sub.NTRAMIT =driver_sub.claimant_num\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.falta\nand row_num =1\nwhere driver_sub.curr_code='CLP'\n) task_cnt\non task_cnt.claim_num = driver.claim_num\nand task_cnt.claimant_num =driver.claimant_num\nand driver.curr_code=task_cnt.curr_code\nand task_cnt.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand task_cnt.row_num1=1\n\n--##############total_order###############\n\nleft outer join \n(\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(task_sub.total_order_count as integer) as total_order_count,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.auor_fe_registro,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.auor_fe_registro DESC  ) as row_num1\nFROM (select * from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code='CLP')  driver_sub\nleft outer join \n(select SRC.AUOR_SISI_NU_SINIESTRO,SRC.AUOR_NU_IMPLICADO,SRC.auor_fe_registro,SRC.total_order_count,SRC.curr_code,\nrow_number() over(partition by SRC.AUOR_SISI_NU_SINIESTRO,SRC.AUOR_NU_IMPLICADO,SRC.auor_fe_registro  order by row_nums DESC  ) as row_num\nfrom\n(\nselect r.AUOR_SISI_NU_SINIESTRO,r.AUOR_NU_IMPLICADO,cast(r.auor_fe_registro as date) auor_fe_registro,d.curr_code, \n count(*) over (partition by r.AUOR_SISI_NU_SINIESTRO,r.AUOR_NU_IMPLICADO order by r.AUOR_SISI_NU_SINIESTRO,r.AUOR_NU_IMPLICADO,cast(r.auor_fe_registro as date) rows unbounded preceding) as total_order_count\n           ,row_number() over(partition by r.AUOR_SISI_NU_SINIESTRO,r.AUOR_NU_IMPLICADO,cast(r.auor_fe_registro as date) order by cast(r.auor_fe_registro as date) desc ) as row_nums\n  from cdp_ods.sissiniestro_autt_ordenes_reparacion r \ninner join (select distinct claim_num,claimant_num,curr_code from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code='CLP') d \non r.AUOR_SISI_NU_SINIESTRO=d.claim_num and r.AUOR_NU_IMPLICADO=d.claimant_num \nAND d.curr_code='CLP'\n) SRC ) task_sub\non task_sub.AUOR_SISI_NU_SINIESTRO = driver_sub.claim_num\nand task_sub.AUOR_NU_IMPLICADO =driver_sub.claimant_num\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.auor_fe_registro\nand row_num =1\nwhere driver_sub.curr_code='CLP'\n) total_order\non total_order.claim_num=driver.claim_num\nand total_order.claimant_num =driver.claimant_num\nand total_order.curr_code=driver.curr_code\nand total_order.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand total_order.row_num1=1\n\n--##############total_adj###############\n\n\nleft outer join \n(\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(task_sub.total_adj_count as integer) as total_adj_count,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.auaj_fe_registro,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.auaj_fe_registro DESC  ) as row_num1\nFROM (select * from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code='CLP') driver_sub\nleft outer join \n(select SRC.AUOR_SISI_NU_SINIESTRO,SRC.AUOR_NU_IMPLICADO,SRC.auaj_fe_registro,SRC.total_adj_count,SRC.curr_code,\nrow_number() over(partition by SRC.AUOR_SISI_NU_SINIESTRO,SRC.AUOR_NU_IMPLICADO,SRC.auaj_fe_registro  order by row_nums DESC  ) as row_num\nfrom\n(\nselect a1.AUOR_SISI_NU_SINIESTRO,a1.AUOR_NU_IMPLICADO,cast(a1.auaj_fe_registro as date) auaj_fe_registro,d.curr_code,\ncount(a1.auaj_nu_ajuste) over (partition by a1.AUOR_SISI_NU_SINIESTRO,a1.AUOR_NU_IMPLICADO order by a1.AUOR_SISI_NU_SINIESTRO,a1.AUOR_NU_IMPLICADO,cast(a1.auaj_fe_registro as date) rows unbounded preceding) as total_adj_count\n           ,row_number() over(partition by a1.AUOR_SISI_NU_SINIESTRO,a1.AUOR_NU_IMPLICADO,cast(a1.auaj_fe_registro as date) order by cast(a1.auaj_fe_registro as date) desc ) as row_nums\nfrom (select a.auaj_nu_ajuste,o.AUOR_SISI_NU_SINIESTRO,o.AUOR_NU_IMPLICADO,cast(min(a.auaj_fe_registro) as date) auaj_fe_registro\nfrom cdp_ods.sissiniestro_autt_ajuste_danos a inner join cdp_ods.sissiniestro_autt_ordenes_reparacion o \non a.AUAJ_SISI_NU_SINIESTRO = o.AUOR_SISI_NU_SINIESTRO and a.AUAJ_NU_IMPLICADO =  o.AUOR_NU_IMPLICADO \ngroup by a.auaj_nu_ajuste,o.AUOR_SISI_NU_SINIESTRO,o.AUOR_NU_IMPLICADO  ) a1 \ninner join (select distinct claim_num,claimant_num,curr_code from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code='CLP') d \non a1.AUOR_SISI_NU_SINIESTRO=d.claim_num and a1.AUOR_NU_IMPLICADO=d.claimant_num\nand d.curr_code='CLP'\n) SRC ) task_sub\non task_sub.AUOR_SISI_NU_SINIESTRO = driver_sub.claim_num\nand task_sub.AUOR_NU_IMPLICADO =driver_sub.claimant_num\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.auaj_fe_registro\nand row_num =1\nwhere driver_sub.curr_code='CLP'\n)total_adj\non total_adj.claim_num=driver.claim_num\nand total_adj.claimant_num =driver.claimant_num\nand total_adj.curr_code=driver.curr_code\nand total_adj.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand total_adj.row_num1=1\n\n--##############total_awarded_adj###############\n\nleft outer join \n(\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(task_sub.total_awarded_adj_count as integer) as total_awarded_adj_count,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.auor_fe_registro,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.auor_fe_registro DESC  ) as row_num1\nFROM (select * from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code='CLP') driver_sub\nleft outer join \n(select SRC.AUOR_SISI_NU_SINIESTRO,SRC.AUOR_NU_IMPLICADO,SRC.auor_fe_registro,SRC.total_awarded_adj_count,SRC.curr_code,\nrow_number() over(partition by SRC.AUOR_SISI_NU_SINIESTRO,SRC.AUOR_NU_IMPLICADO,SRC.auor_fe_registro  order by row_nums DESC  ) as row_num\nfrom\n(\nselect a1.AUOR_SISI_NU_SINIESTRO,a1.AUOR_NU_IMPLICADO,cast(a1.auor_fe_registro as date) auor_fe_registro,d1.curr_code,\ncount(audl_auor_nu_ajuste) over (partition by a1.AUOR_SISI_NU_SINIESTRO,a1.AUOR_NU_IMPLICADO order by a1.AUOR_SISI_NU_SINIESTRO,a1.AUOR_NU_IMPLICADO,cast(a1.auor_fe_registro as date) rows unbounded preceding) as total_awarded_adj_count\n           ,row_number() over(partition by a1.AUOR_SISI_NU_SINIESTRO,a1.AUOR_NU_IMPLICADO,cast(a1.auor_fe_registro as date) order by cast(a1.auor_fe_registro as date) desc ) as row_nums\nfrom (select d.audl_auor_nu_ajuste,o.AUOR_SISI_NU_SINIESTRO,o.AUOR_NU_IMPLICADO,cast(min(o.auor_fe_registro) as date) auor_fe_registro\nfrom cdp_ods.sissiniestro_autt_ordenes_reparacion o inner join cdp_ods.sissiniestro_autt_detalle_ordenes d\non o.AUOR_SISI_NU_SINIESTRO = d.AUDL_AUOR_NU_SINIESTRO and o.AUOR_NU_ORDEN_REPARACION =  d.audl_auor_nu_orden \ngroup by d.audl_auor_nu_ajuste,o.AUOR_SISI_NU_SINIESTRO,o.AUOR_NU_IMPLICADO) a1\ninner join (select distinct claim_num,claimant_num,curr_code from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code='CLP') d1 \non a1.AUOR_SISI_NU_SINIESTRO=d1.claim_num and a1.AUOR_NU_IMPLICADO=d1.claimant_num\nand d1.curr_code='CLP'\n) SRC) task_sub\non task_sub.AUOR_SISI_NU_SINIESTRO = driver_sub.claim_num\nand task_sub.AUOR_NU_IMPLICADO =driver_sub.claimant_num\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.auor_fe_registro\nand row_num =1\nwhere driver_sub.curr_code='CLP'\n)total_awarded_adj\non total_awarded_adj.claim_num=driver.claim_num\nand total_awarded_adj.claimant_num =driver.claimant_num\nand total_awarded_adj.curr_code=driver.curr_code\nand total_awarded_adj.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand total_awarded_adj.row_num1=1\n\n\n---###########total_discount_amt########\n\nleft outer join \n(\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as total_discount_amt,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.falta,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.falta DESC  ) as row_num1\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver  driver_sub\nleft outer join \n(\nSELECT SRC.total_discount_amt,SRC.NSINIES, SRC.NTRAMIT, SRC.curr_code,SRC.falta,SRC.cumulative_signups,\n  row_number() over(partition by SRC.NSINIES, SRC.NTRAMIT, SRC.curr_code,SRC.falta  order by ROW_NUMS DESC  ) as row_num\nFROM           \n(\nSELECT  \n    sum(d. AUDO_AUDO_MT_DESCUENTO)   as total_discount_amt,  t.NSINIES, t.NTRAMIT, d1.curr_code,cast(t.falta as date) as falta,\n   sum( sum(d. AUDO_AUDO_MT_DESCUENTO )) over (partition by t.NSINIES, t.NTRAMIT, d1.curr_code order by cast(t.falta as date),total_discount_amt rows unbounded preceding) as cumulative_signups\n           ,row_number() over(partition by t.NSINIES, t.NTRAMIT, d1.curr_code,cast(t.falta as date) order by cast(t.falta as date)  desc  ) as row_nums\n   from cdp_ods.sisaxis_tramitacionsini t inner join cdp_ods.sissiniestro_autt_descuento_ordenes  d\n   on t.NSINIES =d.AUDO_AUOR_NU_SINIESTRO and t.NTRAMIT = d.AUDO_AUOR_NU_IMPLICADO and d.AUDO_AUDO_CD_DESCUENTO <> 3\n      inner join (select distinct claim_num, claimant_num, curr_code from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code = 'CLP') d1\n        on t.NSINIES=d1.claim_num and t.NTRAMIT=d1.claimant_num \n                                and d1.curr_code ='CLP' --and cast(t.falta as date) = cast(d1.record_eff_dtm as date) \ngroup by t.NSINIES,t.NTRAMIT,d1.curr_code,cast(t.falta as date)\norder by t.NSINIES,t.NTRAMIT,d1.curr_code,cast(t.falta as date)\n)SRC\n)task_sub\non task_sub.NSINIES = driver_sub.claim_num\nand task_sub.NTRAMIT =driver_sub.claimant_num\nand task_sub.curr_code=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.falta\nand row_num =1\n) total_discount\non total_discount.claim_num=driver.claim_num\nand total_discount.claimant_num =driver.claimant_num\nand total_discount.curr_code=driver.curr_code\nand total_discount.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand total_discount.row_num1=1\n\n--########### total_order_cost ########\n\n  left outer join\n    (Select distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as total_order_cost_amt,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.AUOR_FE_REGISTRO,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.AUOR_FE_REGISTRO DESC  ) as row_num1\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver  driver_sub\nleft outer join \n(\nSELECT SRC.total_order_cost_amt,SRC.AUOR_SISI_NU_SINIESTRO,SRC.AUOR_NU_IMPLICADO,SRC.curr_code,cast(SRC.AUOR_FE_REGISTRO as date),SRC.cumulative_signups,\n  row_number() over(partition by SRC.AUOR_SISI_NU_SINIESTRO,SRC.AUOR_NU_IMPLICADO,SRC.curr_code,cast(SRC.AUOR_FE_REGISTRO as date)  order by ROW_NUMS DESC  ) as row_num\nFROM  \n(\nSELECT  \n    sum(o. AUOR_MT_TOTAL_ORDEN)   as total_order_cost_amt,  o.AUOR_SISI_NU_SINIESTRO,o.AUOR_NU_IMPLICADO,d.curr_code,cast(o.AUOR_FE_REGISTRO as date) AUOR_FE_REGISTRO,\n   sum( sum(o. AUOR_MT_TOTAL_ORDEN )) over (partition by o.AUOR_SISI_NU_SINIESTRO,o.AUOR_NU_IMPLICADO,d.curr_code order by cast(o.AUOR_FE_REGISTRO as date),total_order_cost_amt rows unbounded preceding) as cumulative_signups\n           ,row_number() over(partition by o.AUOR_SISI_NU_SINIESTRO,o.AUOR_NU_IMPLICADO,d.curr_code ,cast(o.AUOR_FE_REGISTRO as date)  order by cast(o.AUOR_FE_REGISTRO as date)   desc  ) as row_nums\n    from cdp_ods.sissiniestro_autt_ordenes_reparacion o \n     --inner join cdp_stg_dwh.stg_fact_loss_history_t_axis_driver d\n                inner join (select distinct claim_num, claimant_num, curr_code from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code = 'CLP') d\n        on o.AUOR_SISI_NU_SINIESTRO=d.claim_num and o.AUOR_NU_IMPLICADO=d.claimant_num and d.curr_code='CLP'\n                               -- and cast(o.AUOR_FE_REGISTRO as date) = cast(d.record_eff_dtm as date)                              \ngroup by o.AUOR_SISI_NU_SINIESTRO,o.AUOR_NU_IMPLICADO,d.curr_code ,cast(o.AUOR_FE_REGISTRO as date)\norder by o.AUOR_SISI_NU_SINIESTRO,o.AUOR_NU_IMPLICADO,d.curr_code ,cast(o.AUOR_FE_REGISTRO as date) ) SRC ) task_sub\non task_sub.AUOR_SISI_NU_SINIESTRO = driver_sub.claim_num\nand task_sub.AUOR_NU_IMPLICADO =driver_sub.claimant_num\nand task_sub.curr_code=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.AUOR_FE_REGISTRO\nand row_num =1\n                ) total_order_cost\n     on total_order_cost.claim_num=driver.claim_num\n        and total_order_cost.claimant_num =driver.claimant_num and total_order_cost.curr_code=driver.curr_code\nand total_order_cost.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand total_order_cost.row_num1=1\n   \n\n--########### total_other_income_amt ########   \nleft outer join \n(\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as total_other_income_amt,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.falta,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.falta DESC  ) as row_num1\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver  driver_sub\nleft outer join \n(\nSELECT SRC.total_other_income_amt,SRC.nsinies, SRC.ntramit, SRC.cmonpag,SRC.falta,SRC.cumulative_signups,\n  row_number() over(partition by SRC.nsinies, SRC.ntramit, SRC.cmonpag,SRC.falta order by ROW_NUMS DESC  ) as row_num\nFROM \n(\nSELECT  \n    sum(pag.isinretpag)   as total_other_income_amt,  pag.nsinies,pag.ntramit,pag.cmonpag,cast(pag.falta as date) falta ,\n   sum( sum(pag.isinretpag )) over (partition by pag.nsinies,pag.ntramit,pag.cmonpag order by cast(pag.falta as date),total_other_income_amt rows unbounded preceding) as cumulative_signups\n           ,row_number() over(partition by pag.nsinies,pag.ntramit,pag.cmonpag,cast(pag.falta as date) order by cast(pag.falta as date)  desc  ) as row_nums\nFrom (SELECT case when ctippag = 9 then (isinretpag*-1) else isinretpag end as isinretpag ,nsinies,ntramit,cmonpag,falta,sidepag,ctippag,cestpag FROM cdp_ods.sisaxis_pagosinitrami) pag\ninner join (select distinct claim_num, claimant_num, curr_code from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver) d\n        on pag.nsinies=d.claim_num and pag.NTRAMIT=d.claimant_num and pag.cmonpag=d.curr_code \n inner join cdp_ods.sisaxis_siniestros sin\non pag.nsinies=sin.nsinies\nand not exists (Select 1 from cdp_stg_dwh.sisaxis_pagosinitrami anu  Where anu.ctippag = 3\nand anu.nsinies = pag.nsinies and anu.spganul = pag.sidepag)\nand pag.cestpag   = 2 -- 1 Aceptado, 2 Pagado\nand pag.ctippag in(1,9)     -- 2 Pago, 7 Recupero\ninner join cdp_ods.sisaxis_seguros seg\non seg.sseguro = sin.sseguro\ngroup by pag.nsinies,pag.ntramit,pag.cmonpag,cast(pag.falta as date)\norder by pag.nsinies,pag.ntramit,pag.cmonpag,cast(pag.falta as date) )SRC\n)task_sub\non task_sub.nsinies = driver_sub.claim_num\nand task_sub.ntramit =driver_sub.claimant_num\nand task_sub.cmonpag=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.falta\nand row_num =1\n) total_other_income\non total_other_income.claim_num = driver.claim_num\nand total_other_income.claimant_num =driver.claimant_num\nand total_other_income.curr_code = driver.curr_code\nand total_other_income.record_eff_dtm=cast(driver.record_eff_dtm as date)\nAND total_other_income.row_num1=1\n   \n--########### est_loss_amt ########     \n   \n  left outer join \n  (\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as total_estd_loss_amt,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.auaj_fe_status,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.auaj_fe_status DESC  ) as row_num1\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver  driver_sub\nleft outer join \n(\n\nSELECT SRC.est_loss_amt,SRC.AUAJ_SISI_NU_SINIESTRO, SRC.AUAJ_NU_IMPLICADO, SRC.curr_code,SRC.auaj_fe_status,SRC.cumulative_signups,\n  row_number() over(partition by SRC.AUAJ_SISI_NU_SINIESTRO, SRC.AUAJ_NU_IMPLICADO, SRC.curr_code,SRC.auaj_fe_status  order by ROW_NUMS DESC  ) as row_num\nFROM\n(\n\n\nSELECT  \n    sum(BB.AUAA_MT_TOTAL)   as est_loss_amt,BB.AUAJ_SISI_NU_SINIESTRO, BB.AUAJ_NU_IMPLICADO,BB.curr_code,BB.auaj_fe_status,\n   sum( sum(BB.AUAA_MT_TOTAL )) over (partition by BB.AUAJ_SISI_NU_SINIESTRO, BB.AUAJ_NU_IMPLICADO,BB.curr_code order by cast(BB.auaj_fe_status as date),est_loss_amt rows unbounded preceding) as cumulative_signups\n           ,row_number() over(partition by BB.AUAJ_SISI_NU_SINIESTRO, BB.AUAJ_NU_IMPLICADO,BB.curr_code,cast(BB.auaj_fe_status as date) order by cast(BB.auaj_fe_status as date)  desc  ) as row_nums\nFROM(\n(\nSelect a.AUAJ_SISI_NU_SINIESTRO ,a.AUAJ_NU_IMPLICADO,cast(a.auaj_fe_status as date) auaj_fe_status,a.AUAJ_NU_AJUSTE ,\nrow_number ()over (partition by AUAJ_SISI_NU_SINIESTRO,AUAJ_NU_IMPLICADO order by AUAJ_NU_AJUSTE asc,auaj_fe_status) as row_num\n         From cdp_ods.sissiniestro_autt_ajuste_danos a ) ajuste_danos\n  inner join  cdp_ods.sissiniestro_autt_detalle_ajuste  TOTAL\n     on   TOTAL.AUAA_AUAJ_NU_AJUSTE =  ajuste_danos.AUAJ_NU_AJUSTE\n     and TOTAL.auaa_auaj_nu_siniestro =ajuste_danos.AUAJ_SISI_NU_SINIESTRO\n     and ajuste_danos.row_num=1\ninner join (select distinct claim_num, claimant_num, curr_code from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code = 'CLP')  d \n        on ajuste_danos.AUAJ_SISI_NU_SINIESTRO=d.claim_num and ajuste_danos.AUAJ_NU_IMPLICADO=d.claimant_num \n                                 and d.curr_code='CLP' --and ajuste_danos.auaj_fe_status<= cast(d.record_eff_dtm as date)\n                                  \n)BB\ngroup by BB.AUAJ_SISI_NU_SINIESTRO, BB.AUAJ_NU_IMPLICADO,BB.curr_code,BB.auaj_fe_status\norder by BB.AUAJ_SISI_NU_SINIESTRO, BB.AUAJ_NU_IMPLICADO,BB.curr_code,BB.auaj_fe_status) SRC\n)task_sub\non task_sub.AUAJ_SISI_NU_SINIESTRO = driver_sub.claim_num\nand task_sub.AUAJ_NU_IMPLICADO =driver_sub.claimant_num\nand task_sub.curr_code=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.auaj_fe_status\nand row_num =1\n  ) est_loss_amt\n  on est_loss_amt.claim_num = driver.claim_num\n  and est_loss_amt.claimant_num = driver.claimant_num  and est_loss_amt.curr_code=driver.curr_code\n  and est_loss_amt.record_eff_dtm=cast(driver.record_eff_dtm as date)\n  AND est_loss_amt.row_num1=1\n  \n   \n--########### total_loss_payment_amt ########       \n   \n  left outer join  (\n  Select distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as total_loss_payment_amt,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.falta,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.falta DESC  ) as row_num1\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver  driver_sub\nleft outer join \n(\nSELECT SRC.total_loss_payment_amt,SRC.nsinies, SRC.ntramit, SRC.cmonpag,SRC.falta,SRC.cumulative_signups,\n  row_number() over(partition by SRC.nsinies, SRC.ntramit, SRC.cmonpag,SRC.falta  order by ROW_NUMS DESC  ) as row_num\nFROM\n(SELECT  \n    sum(pag.isinretpag)   as total_loss_payment_amt,  pag.nsinies,pag.ntramit,pag.cmonpag,cast(pag.falta as date) as falta,\n   sum( sum(pag.isinretpag )) over (partition by pag.nsinies,pag.ntramit,pag.cmonpag order by cast(pag.falta as date),total_loss_payment_amt rows unbounded preceding) as cumulative_signups\n           ,row_number() over(partition by pag.nsinies,pag.ntramit,pag.cmonpag,cast(pag.falta as date) order by cast(pag.falta as date)  desc  ) as row_nums\nFROM (SELECT case when ctippag = 3 then (isinretpag*-1) else isinretpag end as isinretpag ,nsinies,ntramit,cmonpag,falta,sidepag,ctippag,cestpag FROM cdp_ods.sisaxis_pagosinitrami) pag \n   inner join (select distinct claim_num, claimant_num, curr_code from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver) d\n--inner join cdp_stg_dwh.stg_fact_loss_history_t_axis_driver d\n       on pag.nsinies=d.claim_num and pag.NTRAMIT=d.claimant_num and pag.cmonpag=d.curr_code \n       --and cast(pag.falta as date) <= cast(d.record_eff_dtm as date)\ninner join cdp_ods.sisaxis_siniestros sin\non pag.nsinies=sin.nsinies\nand not exists (Select 1 from cdp_stg_dwh.sisaxis_pagosinitrami anu  Where anu.ctippag = 3\nand anu.nsinies = pag.nsinies and anu.spganul = pag.sidepag)\nand pag.cestpag   = 2 -- 1 Aceptado, 2 Pagado\nand pag.ctippag in(2,3)     -- 2 Pago, 7 Recupero\ninner join cdp_ods.sisaxis_seguros seg\non seg.sseguro = sin.sseguro\ngroup by pag.nsinies,pag.ntramit,pag.cmonpag,cast(pag.falta as date)\norder by pag.nsinies,pag.ntramit,pag.cmonpag,cast(pag.falta as date)\n) SRC\n)task_sub\non task_sub.nsinies = driver_sub.claim_num\nand task_sub.ntramit =driver_sub.claimant_num\nand task_sub.cmonpag=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.falta\nand row_num =1 \n  ) total_loss\non total_loss.claim_num = driver.claim_num\nand total_loss.claimant_num =driver.claimant_num\nand total_loss.curr_code = driver.curr_code\nand total_loss.record_eff_dtm=cast(driver.record_eff_dtm as date)\nAND total_loss.row_num1=1 \n\n------######## labor_cost###--\n\nleft outer join \n(\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as total_labor_cost_amt,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.auor_fe_registro,\n--row_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code  order by driver_sub.record_eff_dtm DESC,task_sub.auor_fe_registro DESC  ) as row_num1\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.auor_fe_registro DESC  ) as row_num1\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver  driver_sub\nleft outer join \n(SELECT total_labor_cost_amt,audl_auor_nu_siniestro,AUOR_NU_IMPLICADO,curr_code,AUOR_FE_REGISTRO,cumulative_signups,\n  row_number() over(partition by audl_auor_nu_siniestro,AUOR_NU_IMPLICADO,curr_code,AUOR_FE_REGISTRO  order by cumulative_signups DESC, ROW_NUMS DESC  ) as row_num\nFROM           \n(SELECT  \n    sum(SRC.total_labor_cost_amt)   as total_labor_cost_amt,  audl_auor_nu_siniestro, AUOR_NU_IMPLICADO, curr_code,cast(AUOR_FE_REGISTRO as date)  AUOR_FE_REGISTRO,\n   sum( sum(SRC.total_labor_cost_amt )) over (partition by audl_auor_nu_siniestro,AUOR_NU_IMPLICADO,curr_code order by cast(AUOR_FE_REGISTRO as date),total_labor_cost_amt rows unbounded preceding) as cumulative_signups\n           ,row_number() over(partition by audl_auor_nu_siniestro,AUOR_NU_IMPLICADO,curr_code,cast(AUOR_FE_REGISTRO as date) order by cast(AUOR_FE_REGISTRO as date)  desc  ) as row_nums\n           FROM\n           (SELECT \n           (a.audl_auaa_mt_concepto+ a.audl_auaa_monto_pintura)  as total_labor_cost_amt,\n      a.audl_auor_nu_siniestro, \n    o.AUOR_NU_IMPLICADO, \n    d1.curr_code,\n    cast(o.AUOR_FE_REGISTRO as date)  AUOR_FE_REGISTRO\n           FROM (select distinct claim_num,claimant_num,curr_code \n                from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver /*where claim_num between '1228715' and '1228815'*/\n                 WHERE curr_code = 'CLP')d1\n      inner join cdp_ods.sissiniestro_autt_ordenes_reparacion o  \n        on o.AUOR_SISI_NU_SINIESTRO=d1.claim_num and o.AUOR_NU_IMPLICADO=d1.claimant_num\n                and d1.curr_code='CLP'\n                ---and cast(o.AUOR_FE_REGISTRO as date) = cast(d1.record_eff_dtm as date)\n                inner join cdp_ods.sissiniestro_autt_detalle_ordenes a\n      on o.AUOR_SISI_NU_SINIESTRO =  a.AUDL_AUOR_NU_SINIESTRO and \n      o.AUOR_NU_ORDEN_REPARACION =  a.audl_auor_nu_orden and \n      o.AUOR_AUAD_NU_AJUSTE     = a.audl_auor_nu_ajuste\n      AND a.audl_auaa_tp_detalle = '1'\n      inner join cdp_ods.sissiniestro_autt_detalle_ajuste aju\n      on a.audl_auor_nu_ajuste = aju.auaa_auaj_nu_ajuste\n     AND a.audl_auor_nu_orden = aju.auaa_nro_orden\n                and a.audl_auaa_cd_concepto = aju.auaa_cd_concepto  -- Added based on Jan-10th 2019 Mapping sheet update\n     and aju.auaa_item_anulado = 0\n     and aju.auaa_tp_detalle = a.audl_auaa_tp_detalle     \n      /*inner join cdp_ods.sissiniestro_autt_repuestos_siniestros b\n      on a.audl_auaa_cd_concepto = b.ausr_nu_repuesto\n      AND b.ausr_auma_cd_marca = '999'*/               -- Commented based on Jan-10th 2019 Mapping sheet update\n      inner join cdp_ods.sisaxis_detvalores d\n      on d.catribu = a.audl_auaa_tp_dano\n     AND d.cvalor = 400005\n     --where a.audl_auor_nu_siniestro ='1096202' --'1096199'\n     )SRC\n   group by audl_auor_nu_siniestro,AUOR_NU_IMPLICADO,curr_code,cast(AUOR_FE_REGISTRO as date),total_labor_cost_amt\norder by audl_auor_nu_siniestro,AUOR_NU_IMPLICADO,curr_code,cast(AUOR_FE_REGISTRO as date))\n) task_sub\non task_sub.audl_auor_nu_siniestro = driver_sub.claim_num\nand task_sub.AUOR_NU_IMPLICADO =driver_sub.claimant_num\nand task_sub.curr_code=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.auor_fe_registro\nand row_num =1\n) labor_cost\non labor_cost.claim_num=driver.claim_num\nand labor_cost.claimant_num =driver.claimant_num\nand labor_cost.curr_code=driver.curr_code\nand labor_cost.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand labor_cost.row_num1=1\n\n------######## total_repuestos ###--\n\n\nleft outer join  (\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as total_repuestos,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.falta,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.falta DESC  ) as row_num1\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver  driver_sub\nleft outer join \n(\nSELECT SRC.total_repuestos,SRC.NSINIES, SRC.NTRAMIT, SRC.curr_code,SRC.falta,SRC.cumulative_signups,\n  row_number() over(partition by SRC.NSINIES, SRC.NTRAMIT, SRC.curr_code,SRC.falta  order by ROW_NUMS DESC  ) as row_num\nFROM \n(SELECT  \n    sum(a.AUDL_AUAA_MT_CONCEPTO)   as total_repuestos,  t.NSINIES, t.NTRAMIT, d1.curr_code,cast(t.falta as date) as falta,\n   sum( sum(a.AUDL_AUAA_MT_CONCEPTO )) over (partition by t.NSINIES, t.NTRAMIT, d1.curr_code order by cast(t.falta as date),total_repuestos rows unbounded preceding) as cumulative_signups\n           ,row_number() over(partition by t.NSINIES, t.NTRAMIT, d1.curr_code,cast(t.falta as date) order by cast(t.falta as date)  desc  ) as row_nums  \n    from cdp_ods.sisaxis_tramitacionsini t \n    --inner join cdp_stg_dwh.stg_fact_loss_history_t_axis_driver d1\n                  inner join (select distinct claim_num, claimant_num, curr_code from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code = 'CLP') d1\n        on t.NSINIES=d1.claim_num and t.NTRAMIT=d1.claimant_num and d1.curr_code='CLP' \n                                --and cast(t.falta as date) <= cast(d1.record_eff_dtm as date)\n    inner join cdp_ods.sissiniestro_autt_ordenes_reparacion o\n    on t.NSINIES = o.AUOR_SISI_NU_SINIESTRO   \n    and  t.NTRAMIT =  o.AUOR_NU_IMPLICADO\n    inner join cdp_ods.sissiniestro_autt_detalle_ordenes a\n    on o.AUOR_SISI_NU_SINIESTRO =  a.AUDL_AUOR_NU_SINIESTRO  \n    and  o.AUOR_NU_ORDEN_REPARACION =  a.audl_auor_nu_orden  \n    and  o.AUOR_AUAD_NU_AJUSTE     = a.audl_auor_nu_ajuste \n                and  a.audl_auaa_tp_detalle = '3'       \ngroup by t.NSINIES,t.NTRAMIT,d1.curr_code,cast(t.falta as date)\norder by t.NSINIES,t.NTRAMIT,d1.curr_code,cast(t.falta as date)\n)SRC\n)task_sub\non task_sub.NSINIES = driver_sub.claim_num\nand task_sub.NTRAMIT =driver_sub.claimant_num\nand task_sub.curr_code=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.falta\nand row_num =1\n) spare_parts_cost\non spare_parts_cost.claim_num=driver.claim_num\nand spare_parts_cost.claimant_num =driver.claimant_num\nand spare_parts_cost.curr_code=driver.curr_code\nand spare_parts_cost.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand spare_parts_cost.row_num1=1\n\n------######## total_accesorios ###--\n\n\nleft outer join  (\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as total_accesorios,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.falta,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.falta DESC  ) as row_num1\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver  driver_sub\nleft outer join\n(\n\nSELECT total_accesorios,NSINIES,NTRAMIT,curr_code,falta,cumulative_signups,\n  row_number() over(partition by NSINIES,NTRAMIT,curr_code,falta  order by ROW_NUMS DESC  ) as row_num\nFROM \n(SELECT  \n    sum(SRC.total_accesorios)   as total_accesorios, SRC.NSINIES, SRC.NTRAMIT, SRC.curr_code,SRC.falta,\n   sum( sum(SRC. total_accesorios )) over (partition by SRC.NSINIES, SRC.NTRAMIT, SRC.curr_code order by cast(SRC.falta as date),total_accesorios rows unbounded preceding) as cumulative_signups\n           ,row_number() over(partition by SRC.NSINIES, SRC.NTRAMIT, SRC.curr_code,SRC.falta order by cast(SRC.falta as date )  desc  ) as row_nums\nFROM\n(\nselect  nvl(a.audl_auaa_mt_total,0) +  nvl(a.audl_auaa_mt_flete,0 ) total_accesorios,\n        t.NSINIES,t.NTRAMIT,d1.curr_code,cast(t.falta as date) falta     \n    from cdp_ods.sisaxis_tramitacionsini t\n                   inner join (select distinct claim_num, claimant_num, curr_code from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code = 'CLP' ) d1\n    --inner join cdp_stg_dwh.stg_fact_loss_history_t_axis_driver d1\n        on t.NSINIES=d1.claim_num and t.NTRAMIT=d1.claimant_num and d1.curr_code='CLP' \n                                --and cast(t.falta as date) <= cast(d1.record_eff_dtm as date)\n    inner join cdp_ods.sissiniestro_autt_ordenes_reparacion o\n    on t.NSINIES = o.AUOR_SISI_NU_SINIESTRO   \n    and  t.NTRAMIT =  o.AUOR_NU_IMPLICADO\n    inner join cdp_ods.sissiniestro_autt_detalle_ordenes a\n    on o.AUOR_SISI_NU_SINIESTRO =  a.AUDL_AUOR_NU_SINIESTRO  \n    and  o.AUOR_NU_ORDEN_REPARACION =  a.audl_auor_nu_orden  \n    and  o.AUOR_AUAD_NU_AJUSTE     = a.audl_auor_nu_ajuste   \n    and  a.audl_auaa_tp_detalle = '4' ) SRC\n                   group by SRC.NSINIES, SRC.NTRAMIT, SRC.curr_code,SRC.falta,total_accesorios\norder by SRC.NSINIES, SRC.NTRAMIT, SRC.curr_code,SRC.falta )\n)task_sub\non task_sub.NSINIES = driver_sub.claim_num\nand task_sub.NTRAMIT =driver_sub.claimant_num\nand task_sub.curr_code=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.falta\nand row_num =1\n) accessory_cost\n   on accessory_cost.claim_num = driver.claim_num\nand accessory_cost.claimant_num =driver.claimant_num and accessory_cost.curr_code=driver.curr_code\nand accessory_cost.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand accessory_cost.row_num1=1\n\n------######## total_deductible_amt ###--\n\nleft outer join (\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as total_deductible_amt,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.falta,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.falta DESC  ) as row_num1\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver  driver_sub\nleft outer join \n(\n\nSELECT SRC.total_deductible_amt,SRC.NSINIES, SRC.NTRAMIT, SRC.curr_code,SRC.falta,SRC.cumulative_signups,\n  row_number() over(partition by SRC.NSINIES, SRC.NTRAMIT, SRC.curr_code,SRC.falta  order by ROW_NUMS DESC  ) as row_num\nFROM  \n(\nSELECT  \n    sum(d. AUDO_AUDO_MT_DESCUENTO)   as total_deductible_amt, t.NSINIES, t.NTRAMIT,d1.curr_code,cast(t.falta as date) falta,\n   sum( sum(d. AUDO_AUDO_MT_DESCUENTO )) over (partition by t.NSINIES, t.NTRAMIT,d1.curr_code order by cast(t.falta as date),total_deductible_amt rows unbounded preceding) as cumulative_signups\n           ,row_number() over(partition by t.NSINIES, t.NTRAMIT,d1.curr_code,cast(t.falta as date) order by cast(t.falta as date)  desc  ) as row_nums\n           FROM cdp_ods.sisaxis_tramitacionsini t\n              inner join (select distinct claim_num, claimant_num, curr_code from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver where curr_code = 'CLP') d1\n   --inner join cdp_stg_dwh.stg_fact_loss_history_t_axis_driver d1\n        on t.NSINIES=d1.claim_num and t.NTRAMIT=d1.claimant_num and d1.curr_code='CLP' \n        --and cast(t.falta as date) <= cast(d1.record_eff_dtm as date)\n   inner join  cdp_ods.sissiniestro_autt_descuento_ordenes  d\n   on t.NSINIES =d.AUDO_AUOR_NU_SINIESTRO\n      and t.NTRAMIT = d.AUDO_AUOR_NU_IMPLICADO \n                  and d.AUDO_AUDO_CD_DESCUENTO  = 3\ngroup by t.NSINIES,t.NTRAMIT,d1.curr_code,cast(t.falta as date)\norder by t.NSINIES,t.NTRAMIT,d1.curr_code,cast(t.falta as date)\n) SRC\n)task_sub\non task_sub.NSINIES = driver_sub.claim_num\nand task_sub.NTRAMIT =driver_sub.claimant_num\nand task_sub.curr_code=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.falta\nand row_num =1\n) deductible_amt\n   on deductible_amt.claim_num = driver.claim_num\n   and deductible_amt.claimant_num =driver.claimant_num \n   and deductible_amt.curr_code=driver.curr_code\n   and deductible_amt.record_eff_dtm=cast(driver.record_eff_dtm as date)\n   and deductible_amt.row_num1=1\n\n\n------######## total_recov_cost_amt ###-- \n  left outer join  \n  (\n  Select distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as total_recov_cost_amt,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.falta,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.falta DESC  ) as row_num1\n--row_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code  order by driver_sub.record_eff_dtm DESC, task_sub.falta DESC  ) as row_num1\nFROM (select * from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver /*where claim_num between '1228715' and '1228815'*/) driver_sub\nleft outer join \n(\nSELECT nsinies,ntramit,cmonpag,falta,cumulative_signups,\n  row_number() over(partition by nsinies,ntramit,cmonpag,falta order by ROW_NUMS DESC  ) as row_num\nFROM\n(Select   sum(pag.isinretpag) total_recov_amt ,\npag.nsinies,pag.ntramit,\npag.cmonpag,\ncast(pag.falta as date) falta\n     ,sum(sum(isinretpag)) over (partition by pag.nsinies,pag.ntramit,pag.cmonpag order by cast(pag.falta as date),pag.isinretpag rows unbounded preceding) as cumulative_signups\n    ,row_number() over(partition by pag.nsinies,pag.ntramit,pag.cmonpag,cast(pag.falta as date) order by cast(pag.falta as date)  desc  ) as row_nums\n  From (select distinct claim_num,claimant_num,curr_code \n                from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver /*where claim_num between '1228715' and '1228815'*/ ) d  \n  inner join ( SELECT case when ctippag = 8 then (isinretpag*-1) else isinretpag end as isinretpag ,nsinies,ntramit,cmonpag,falta,sidepag,ctippag,cestpag FROM cdp_ods.sisaxis_pagosinitrami) pag\n        on pag.nsinies=d.claim_num and pag.NTRAMIT=d.claimant_num and pag.cmonpag=d.curr_code \ninner join cdp_ods.sisaxis_siniestros sin\non pag.nsinies=sin.nsinies\nand not exists (Select 1 from cdp_stg_dwh.sisaxis_pagosinitrami anu  Where anu.ctippag = 8\nand anu.nsinies = pag.nsinies and anu.spganul = pag.sidepag)\nand pag.cestpag   = 2 -- 1 Aceptado, 2 Pagado\nand pag.ctippag in (7,8)     -- 2 Pago, 7 Recupero\ninner join cdp_ods.sisaxis_seguros seg\non seg.sseguro = sin.sseguro \n   group by pag.nsinies,pag.ntramit,pag.cmonpag ,cast(pag.falta as date),pag.isinretpag \norder by pag.nsinies,pag.ntramit,pag.cmonpag,cast(pag.falta as date)\n) SUB\n)task_sub\non task_sub.nsinies = driver_sub.claim_num\nand task_sub.ntramit =driver_sub.claimant_num\nand task_sub.cmonpag=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.falta\nand row_num =1\n)recov_cost\non recov_cost.claim_num=driver.claim_num\nand recov_cost.claimant_num =driver.claimant_num\nand recov_cost.curr_code=driver.curr_code\nand recov_cost.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand recov_cost.row_num1=1--this is to take latest/greatest in the sub-query for each record from the driver\n/*\n------######## total_payment_legal_amt ###-- \nleft outer join\n(\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as total_payment_legal_amt,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.falta,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.falta DESC  ) as row_num1\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver  driver_sub\nleft outer join \n(\nSELECT SRC.payment_legal_amount,SRC.nsinies , SRC.ntramit, SRC.curr_code,SRC.falta,SRC.cumulative_signups,\n  row_number() over(partition by SRC.nsinies, SRC.ntramit, SRC.curr_code,SRC.falta  order by ROW_NUMS DESC  ) as row_num\nFROM  \n(Select  nvl(sum(pag.isinret),0) payment_legal_amount, pag.nsinies,pag.ntramit,d.curr_code ,cast(pag.falta as date) falta ,\nsum(sum(pag.isinret)) over (partition by pag.nsinies,pag.ntramit,d.curr_code order by cast(pag.falta as date),payment_legal_amount rows unbounded preceding) as cumulative_signups,\nrow_number() over(partition by pag.nsinies,pag.ntramit,d.curr_code,cast(pag.falta as date) order by cast(pag.falta as date)  desc  ) as row_nums            \n             From                \n                  cdp_ods.sisaxis_personas       gir,\n                  cdp_ods.sisaxis_tramitacionsini imp,\n                  cdp_ods.sisaxis_seguros        seg,\n                  cdp_ods.sisaxis_destinatrami   des,\n                  cdp_ods.sisaxis_pagogarantrami gar,\n                  cdp_ods.sisaxis_pagosinitrami  pag,\n                  cdp_ods.sisaxis_siniestros     sin,\n                  cdp_ods.sisaxis_personas       ptra,\n                  cdp_stg_dwh.stg_fact_loss_history_t_axis_driver d\n       where gir.sperson  = pag.sperson\n              and seg.sseguro  = sin.sseguro\n              AND des.nsinies = pag.NSINIES\n              AND des.ntramit = pag.NTRAMIT\n              AND des.sperson = pag.sperson \n              AND des.ctipdes = pag.ctipdes\n              and imp.ntramit  = pag.ntramit\n              and imp.nsinies  = pag.nsinies\n              and gar.cgarant in (9999,9998)\n              and gar.sidepag  = pag.sidepag\n              and pag.nsinies=d.claim_num \n              and pag.NTRAMIT=d.claimant_num \n              and pag.cmonpag=d.curr_code\n              and not exists (Select 1\n                                from cdp_ods.sisaxis_pagosinitrami anu\n                               Where anu.ctippag = 3\n                                 and anu.nsinies = pag.nsinies\n                                 and anu.spganul = pag.sidepag)\n              and pag.cestpag IN (2)\n              and pag.ctippag  = 2     -- 2 Pago, 7 Recupero\n              and pag.nsinies  = sin.nsinies\n              and imp.sperson  = ptra.sperson\n              group by pag.nsinies,pag.ntramit,d.curr_code ,cast(pag.falta as date)\norder by pag.nsinies,pag.ntramit,d.curr_code,cast(pag.falta as date)\n) SRC\n)task_sub\non task_sub.NSINIES = driver_sub.claim_num\nand task_sub.NTRAMIT =driver_sub.claimant_num\nand task_sub.curr_code=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.falta\nand row_num =1\n)payment_legal_cost\non payment_legal_cost.claim_num=driver.claim_num\nand payment_legal_cost.claimant_num =driver.claimant_num\nand payment_legal_cost.curr_code=driver.curr_code\nand payment_legal_cost.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand payment_legal_cost.row_num1=1--this is to take latest/greatest in the sub-query for each record from the driver \n\n------######## toatl_recovery_legal_amt ###--\nleft outer join(\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as toatl_recovery_legal_amt,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.falta,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.falta DESC  ) as row_num1\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver  driver_sub\nleft outer join \n(\nSELECT SRC.recovery_legal_amt,SRC.nsinies , SRC.ntramit, SRC.curr_code,SRC.falta,SRC.cumulative_signups,\n  row_number() over(partition by SRC.nsinies, SRC.ntramit, SRC.curr_code,SRC.falta  order by ROW_NUMS DESC  ) as row_num\nFROM  \n(Select  nvl(sum(pag.recovery_legal_amt),0) recovery_legal_amt, pag.nsinies,pag.ntramit,pag.curr_code ,cast(pag.falta as date) falta ,\nsum(sum(pag.recovery_legal_amt)) over (partition by pag.nsinies,pag.ntramit,pag.curr_code order by cast(pag.falta as date),recovery_legal_amt rows unbounded preceding) as cumulative_signups,\nrow_number() over(partition by pag.nsinies,pag.ntramit,pag.curr_code,cast(pag.falta as date) order by cast(pag.falta as date)  desc  ) as row_nums            \nFrom    (\nselect (pag.isinretpag - pag.iretencpag) as recovery_legal_amt,pag.nsinies,pag.ntramit,d.curr_code,pag.falta\n  From    cdp_ods.sisaxis_seguros seg,\n                     cdp_ods.sisaxis_pagosinitrami   pag,\n                     cdp_ods.sisaxis_siniestros     sin,             \n                  cdp_stg_dwh.stg_fact_loss_history_t_axis_driver d\n       where seg.sseguro         = sin.sseguro\n                 and pag.nsinies         = sin.nsinies\n                 and pag.cestpag IN (1,2) -- 1 Aceptado, 2 Pagado\n                 and pag.cestval         = 1     -- 0 Pendiente de Validar, 1: Validado\n                 and pag.ctippag         = 7  \n                 and pag.nsinies=d.claim_num \n              and pag.NTRAMIT=d.claimant_num \n              and pag.cmonpag=d.curr_code             \n             \n             ) pag\n              group by pag.nsinies,pag.ntramit,pag.curr_code ,cast(pag.falta as date),recovery_legal_amt\norder by pag.nsinies,pag.ntramit,pag.curr_code,cast(pag.falta as date)\n) SRC\n)task_sub\non task_sub.NSINIES = driver_sub.claim_num\nand task_sub.NTRAMIT =driver_sub.claimant_num\nand task_sub.curr_code=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.falta\nand row_num =1\n)recovery_legal_cost\non recovery_legal_cost.claim_num=driver.claim_num\nand recovery_legal_cost.claimant_num =driver.claimant_num\nand recovery_legal_cost.curr_code=driver.curr_code\nand recovery_legal_cost.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand recovery_legal_cost.row_num1=1 */\n------######## toatl_legal_amt ###--\nleft outer join\n(\nSelect distinct \ncast(driver_sub.claim_num as varchar(35)) AS claim_num,\ncast(driver_sub.claimant_num as integer) as claimant_num,\ncast(driver_sub.loss_item_num as integer) as loss_item_num,\ncast(driver_sub.curr_code as varchar(10)) as curr_code,\ncast(nvl(task_sub.cumulative_signups,0) as numeric(25,10))as total_legal_cost_amt,\ncast(driver_sub.record_eff_dtm as date) as record_eff_dtm,\ntask_sub.falta,\nrow_number() over(partition by driver_sub.claim_num,driver_sub.claimant_num,driver_sub.curr_code,cast(driver_sub.record_eff_dtm as date)  order by task_sub.falta DESC  ) as row_num1\nFROM cdp_stg_dwh.stg_fact_loss_history_t_axis_driver driver_sub\nleft outer join \n(SELECT Pago_MO,nsinies,ntramit,cmonpag,falta,cumulative_signups,\n  row_number() over(partition by nsinies,ntramit,cmonpag,falta order by ROW_NUMS DESC  ) as row_num\nFROM\n(\nSelect \nsum(pag.total_legal_fees_amt) Pago_MO, \npag.nsinies,\npag.ntramit,\npag.cmonpag,\ncast(pag.falta as date) falta\n   ,sum(sum(total_legal_fees_amt)) over (partition by pag.nsinies,pag.ntramit,pag.cmonpag order by cast(pag.falta as date),pag.total_legal_fees_amt rows unbounded preceding) as cumulative_signups\n    ,row_number() over(partition by pag.nsinies,pag.ntramit,pag.cmonpag,cast(pag.falta as date) order by cast(pag.falta as date)  desc  ) as row_nums\nfrom \n(\nselect (nvl(RecuperoMO.Recupero_MO,0) - nvl(PagoMO.Pago_MO,0)) as total_legal_fees_amt,RecuperoMO.nsinies,\nRecuperoMO.ntramit,RecuperoMO.cmonpag,RecuperoMO.falta from\n     (select nvl(sum (pag.isinretpag - pag.iretencpag),0) Recupero_MO, pag.nsinies,pag.ntramit,pag.cmonpag,\n     cast(pag.falta as date) falta From cdp_ods.sisaxis_pagosinitrami pag\n   inner join (select distinct claim_num,claimant_num,curr_code \n                from cdp_stg_dwh.stg_fact_loss_history_t_axis_driver ) d\n        on pag.nsinies=d.claim_num and pag.NTRAMIT=d.claimant_num and pag.cmonpag=d.curr_code  \n inner join cdp_ods.sisaxis_siniestros sin\non pag.nsinies = sin.nsinies\nand pag.cestpag IN (1,2) -- 1 Aceptado, 2 Pagado\nand pag.cestval         = 1     -- 0 Pendiente de Validar, 1: Validado\nand pag.ctippag         = 7     -- 2 Pago, 7 Recupero\ninner join cdp_ods.sisaxis_seguros seg\non seg.sseguro = sin.sseguro group by 2,3,4,5) RecuperoMO\nleft outer join\n(\nSelect  nvl(sum(pag.isinret),0) Pago_MO, pag.nsinies,pag.ntramit,pag.cmonpag ,cast(pag.falta as date) falta              \n             From                \n                  cdp_ods.sisaxis_personas       gir,\n                  cdp_ods.sisaxis_tramitacionsini imp,\n                  cdp_ods.sisaxis_seguros        seg,\n                  cdp_ods.sisaxis_destinatrami   des,\n                  cdp_ods.sisaxis_pagogarantrami gar,\n                  cdp_ods.sisaxis_pagosinitrami  pag,\n                  cdp_ods.sisaxis_siniestros     sin,\n                  cdp_ods.sisaxis_personas       ptra\n       where gir.sperson  = pag.sperson\n              and seg.sseguro  = sin.sseguro\n              AND des.nsinies = pag.NSINIES\n              AND des.ntramit = pag.NTRAMIT\n              AND des.sperson = pag.sperson \n              AND des.ctipdes = pag.ctipdes\n              and imp.ntramit  = pag.ntramit\n              and imp.nsinies  = pag.nsinies\n              and gar.cgarant in (9999,9998)\n              and gar.sidepag  = pag.sidepag\n              and not exists (Select 1\n                                from cdp_ods.sisaxis_pagosinitrami anu\n                               Where anu.ctippag = 3\n                                 and anu.nsinies = pag.nsinies\n                                 and anu.spganul = pag.sidepag)\n              and pag.cestpag IN (2)\n              and pag.ctippag  = 2     -- 2 Pago, 7 Recupero\n              and pag.nsinies  = sin.nsinies\n              and imp.sperson  = ptra.sperson\n              group by 2,3,4,5\n\n) PagoMO  \n on RecuperoMO.nsinies=PagoMO.nsinies \n and RecuperoMO.ntramit=PagoMO.ntramit\nand RecuperoMO.cmonpag=PagoMO.cmonpag\nand RecuperoMO.falta=PagoMO.falta\n) pag\n   group by pag.nsinies,pag.ntramit,pag.cmonpag ,cast(pag.falta as date),pag.total_legal_fees_amt \norder by pag.nsinies,pag.ntramit,pag.cmonpag,cast(pag.falta as date)\n)task_sub1\n)task_sub\non task_sub.nsinies = driver_sub.claim_num\nand task_sub.ntramit =driver_sub.claimant_num\nand task_sub.cmonpag=driver_sub.curr_code\nand cast(driver_sub.record_eff_dtm as date)>=task_sub.falta\nand row_num =1\n)legal_cost\non legal_cost.claim_num=driver.claim_num\nand legal_cost.claimant_num =driver.claimant_num\nand legal_cost.curr_code=driver.curr_code\nand legal_cost.record_eff_dtm=cast(driver.record_eff_dtm as date)\nand legal_cost.row_num1=1--this is to take latest/greatest in the sub-query for each record from the driver \n\n\nLEFT JOIN (SELECT 1 as DUMMY, max(fact_loss_key) AS MAX_SID from cdp_dwh.fact_loss_history_t) LKP\nON LKP.DUMMY=1\norder by driver.claim_num,driver.claimant_num,driver.curr_code, driver.record_eff_dtm"
    },
    {
        "type": "customQuery",
        "path": "content.transformations[1].dataAdapter.object.customQuery",
        "value": "select fact_loss_key,src_sys_cd,claim_num,claimant_num,loss_item_num,curr_cd,rec_check_sum ,rec_eff_dtm from cdp_dwh.fact_loss_history_t\nwhere ltst_rec_ind ='Y' and src_sys_cd = 'axis'\nORDER BY src_sys_cd,claim_num,claimant_num,loss_item_num,curr_cd,fact_loss_key"
    }
]