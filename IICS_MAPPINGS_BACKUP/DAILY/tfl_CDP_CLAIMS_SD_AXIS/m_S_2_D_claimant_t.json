[
    {
        "type": "customQuery",
        "path": "content.transformations[0].dataAdapter.object.customQuery",
        "value": "/* Here is the short story of the SQL\n  \n  dummy join with dimension claimant table to retrieve the max dimension key\n  For PENTA the source is from three tables  - sin_perfil - Insured, sin_conduc - Driver and sin_tercer - Third party\n  Update - 10/20 - updated logic in penta section per Nirav's mapping updated version 4.20\n                   Material recovery indicator is defaulted to NULL as the logic is yet to be clarified by Guillermo\n10-22 - Updated claimant num logic in the penta section. Updated to row number and incremented the count by 2 as the sequence number should start from 3 for third party table.\n11-05 - Post Chille team workshop material recovery indicator is updated and added logic to mapping to remove duplicates\n12-03 - Updated Insured Indicator and Insured Identifier in the Penta section.  Modified the case statement.\n  */\nSELECT \n SRC_QRY.at_fault,\n SRC_QRY.legal_recovery_indicator , \n SRC_QRY.material_recovery_indicator, \n SRC_QRY.legal_defense_indicator, \n nvl(SRC_QRY.claim_num,'0') as claim_num , \n nvl(SRC_QRY.claimant_id,'0') as claimant_id,\n nvl(SRC_QRY.claimant_num,0) as  claimant_num,\n SRC_QRY.claimant_name , \n SRC_QRY.rut_invol , \n SRC_QRY.country_cd  , \n SRC_QRY.country_name  , \n SRC_QRY.communa_cd  , \n SRC_QRY.communa_loc_name , \n SRC_QRY.dim_region_key  , \n SRC_QRY.claimant_type_cd    , \n SRC_QRY.claimant_type_desc , \n SRC_QRY.insured_indicator , \n SRC_QRY.insured_identifier , \n SRC_QRY.create_dtm,\n SRC_QRY.src_sys_cd,\n SRC_QRY.location_region_cd,\n SRC_QRY.DUMMY,\nLKP_QRY.MAX_SID as MAX_SID\n FROM \n  (\nSELECT CASE \nWHEN st.cculpab = 1 \nAND tr.ntramit = 1 THEN 'S' \nELSE 'N' \nEND AS at_fault, \nCASE \nWHEN Coalesce(tr.ccauest, 0) IN ( 11, 13, 33, 34 ) THEN 'S' \nELSE 'N' \nEND AS legal_recovery_indicator, \nCASE \nWHEN Coalesce(tr.ccauest, 0) IN ( 12, 13, 34, 38 ) THEN 'S' \nELSE 'N' \nEND                                                                  AS \nmaterial_recovery_indicator, \nCASE \nWHEN Coalesce(tr.ccauest, 0) IN ( 10, 11, 12, 13 ) THEN 'S' \nELSE 'N' \nEND AS legal_defense_indicator, \nCAST(tr.nsinies as VARCHAR(100)) AS claim_num, \nCAST(CAST(tr.sperson as INTEGER) as VARCHAR(100)) AS claimant_id, \nCAST(tr.ntramit AS INTEGER) AS claimant_num , \ntranslate(p.tnombre,'#','')  AS claimant_name, \np.nnumnif AS rut_invol, \nCoalesce(cast(mv.mkt_ref_code as varchar(20)), cast(mv.ref_cd as varchar(20)), Cast(CAST(d.cpais as INTEGER) AS VARCHAR(20)),'152') AS \ncountry_cd, \nCoalesce(mv.mkt_ref_code_desc, mv.ref_desc, 'CHILE') AS country_name , \nCoalesce(cast(communa.mkt_ref_code as varchar(20)), cast(communa.ref_cd as varchar(20)), Cast( \nCAST(d.cpoblac as INTEGER) AS VARCHAR(20))) AS communa_cd, \nCoalesce(communa.mkt_ref_code_desc, communa.ref_desc) as communa_loc_name , \nCoalesce(rt.dim_region_key, 0) AS dim_region_key , \nCAST(CAST(tr.ctramit as INTEGER) AS VARCHAR(100)) AS claimant_type_cd, \nCAST(des.ttramit AS VARCHAR(200)) AS claimant_type_desc, \nCASE \nWHEN tr.ntramit = 1 THEN 'S' \nELSE 'N' \nEND AS insured_indicator, \nCASE \nWHEN tr.ntramit = 1 THEN Cast(CAST(p.sperson AS INTEGER) AS VARCHAR(10)) \nELSE '0' \nEND AS insured_identifier , \ntr.falta AS create_dtm ,\n'axis' AS src_sys_cd   ,\n Coalesce(cast(region.mkt_ref_code as varchar(20)), cast(region.ref_cd as varchar(20)), Cast(CAST(d.cprovin as INTEGER) AS VARCHAR(20))) AS \nlocation_region_cd ,\n1 as DUMMY  \nFROM   (SELECT tram.*, \nRank() \nover( \nPARTITION BY tram.nsinies, ntramit,tram.sperson \nORDER BY tram.rec_crt_dtm DESC) AS RNK \nFROM   cdp_stg_dwh.SISAXIS_TRAMITACIONSINI tram) tr \nleft join cdp_ods.SISAXIS_SINIESTROS AS st \nON st.nsinies = tr.nsinies \nleft join cdp_ods.SISAXIS_DESTRAMITACION AS des \nON tr.ctramit = des.ctramit \nleft join cdp_ods.SISAXIS_PERSONAS AS p \nON tr.sperson = p.sperson \nleft join cdp_ods.SISAXIS_DIRECCIONES AS d \nON tr.sperson = d.sperson \nAND d.cdomici = 1 \nleft join cdp_ods.SISAXIS_GEO_DESPROVIN AS g \nON d.cprovin = g.cprovin \nleft join cdp_stg_dwh.STG_TREF_CODE_MAP_VARIANT mv \nON mv.ref_cd = g.cpais \nAND mv.src_sys_cd = 'axis' \nAND mv.ref_type_cd = 'country' \nleft join cdp_stg_dwh.STG_TREF_CODE_MAP_VARIANT communa \nON communa.ref_cd = Cast(cast(d.cpoblac as integer) AS VARCHAR(200)) \nAND communa.src_sys_cd = 'axis' \nAND communa.ref_type_cd = 'comuna' \nleft join cdp_stg_dwh.STG_TREF_CODE_MAP_VARIANT region \nON region.ref_cd = Cast(cast(d.cprovin as integer) AS VARCHAR(200)) \nAND region.src_sys_cd = 'axis' \nAND region.ref_type_cd = 'region' \nleft join cdp_dwh.DIM_REGION_T rt \nON rt.region_cd = region.mkt_ref_code \nWHERE  tr.rnk = 1 \nAND tr.sperson IS NOT NULL ) as SRC_QRY\n LEFT JOIN (SELECT 1 as DUMMY, MAX(dim_claimant_key) AS MAX_SID from cdp_dwh.dim_claimant_t) LKP_QRY\nON LKP_QRY.DUMMY = SRC_QRY.DUMMY"
    },
    {
        "type": "customQuery",
        "path": "content.transformations[1].dataAdapter.object.customQuery",
        "value": "select \nclaim_num,\nclaimant_id,\nsrc_sys_cd,\nclaimant_num,\ndim_claimant_key,\nrec_crt_dtm\nfrom cdp_dwh.dim_claimant_t\nwhere src_sys_cd='axis' --"
    }
]