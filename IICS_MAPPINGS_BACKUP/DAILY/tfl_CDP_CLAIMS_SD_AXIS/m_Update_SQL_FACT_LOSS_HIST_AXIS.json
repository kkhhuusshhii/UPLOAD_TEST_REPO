[
    {
        "type": "customQuery",
        "path": "content.transformations[0].dataAdapter.object.customQuery",
        "value": "select distinct CAST(claim_num AS VARCHAR(35)),claimant_num,loss_item_num,CAST(curr_code AS VARCHAR(10)),record_eff_dtm from\n(\nselect pagosinitrami.NSINIES AS claim_num, pagosinitrami.NTRAMIT as claimant_num,pagosinitrami.NTRAMIT as loss_item_num,\npagosinitrami.cmonpag as curr_code, cast(min(pagosinitrami.FALTA) as date) as record_eff_dtm  from cdp_stg_dwh.sisaxis_pagosinitrami pagosinitrami\ngroup by 1,2,3,4\nunion\nselect reservasinitrami.NSINIES AS claim_num, reservasinitrami.NTRAMIT as claimant_num,reservasinitrami.NTRAMIT as loss_item_num,\nreservasinitrami.CMONRES as curr_code, cast(min(reservasinitrami.FALTA) as date) as record_eff_dtm  from cdp_stg_dwh.sisaxis_reservasinitrami reservasinitrami\ngroup by 1,2,3,4\nunion\nselect REPARACION.AUOR_SISI_NU_SINIESTRO  AS claim_num, REPARACION.AUOR_NU_IMPLICADO  as claimant_num,REPARACION.AUOR_NU_IMPLICADO  as loss_item_num,\n'CLP' as curr_code, cast(min(REPARACION.AUOR_FE_REGISTRO) as date) as record_eff_dtm  from cdp_stg_dwh.SISSINIESTRO_AUTT_ORDENES_REPARACION REPARACION\ngroup by 1,2,3,4\nunion\nselect a.AUDL_AUOR_NU_SINIESTRO AS claim_num, b.AUOR_NU_IMPLICADO  as claimant_num,b.AUOR_NU_IMPLICADO  as loss_item_num,\n'CLP' as curr_code, cast(min(current_timestamp) as date) as record_eff_dtm  from cdp_stg_dwh.sissiniestro_autt_detalle_ordenes a\nINNER JOIN cdp_ods.sissiniestro_autt_ordenes_reparacion b ON a.audl_auor_nu_siniestro=b.AUOR_SISI_NU_SINIESTRO \n   AND a.audl_auor_nu_orden = b.AUOR_NU_ORDEN_REPARACION    AND a.audl_auor_nu_ajuste= b.auor_auad_nu_ajuste\ngroup by 1,2,3,4\n\n)sub\nWHERE 1=2"
    },
    {
        "type": "pre/post-sql",
        "path": "content.transformations[1].dataAdapter.runtimeAttributes.attributes[15]",
        "name": "Post-sql",
        "value": "/****FOR EXPIRING THE RECORDS AS PER TYPE-02*******/  \nUPDATE CDP_DWH.FACT_LOSS_HISTORY_T SET  REC_EXP_DTM = SRC.UPDATE_DATE \nFROM\n    (SELECT A.FACT_LOSS_KEY AS FACT_LOSS_KEY,B.REC_EFF_DTM - INTERVAL '1 SECOND' AS UPDATE_DATE\n                FROM\n                (SELECT \n                ROW_NUMBER() OVER(PARTITION BY CLAIM_NUM,SRC_SYS_CD,CLAIMANT_NUM,LOSS_ITEM_NUM,CURR_CD ORDER BY FACT_LOSS_KEY ASC, REC_EFF_DTM ASC) AS ROW_NUM,\n                FACT_LOSS_KEY,\n                CLAIM_NUM,\n                SRC_SYS_CD,\n                CLAIMANT_NUM,\n                LOSS_ITEM_NUM,\n                CURR_CD FROM CDP_DWH.FACT_LOSS_HISTORY_T \n                WHERE LTST_REC_IND = 'Y' AND SRC_SYS_CD = 'axis'\n                ) A       \n                        INNER JOIN\n                (SELECT \n                (ROW_NUMBER() OVER(PARTITION BY  CLAIM_NUM,SRC_SYS_CD,CLAIMANT_NUM,LOSS_ITEM_NUM,CURR_CD  ORDER BY FACT_LOSS_KEY ASC, REC_EFF_DTM ASC)-1) AS ROW_NUM,\n                FACT_LOSS_KEY,\n                CLAIM_NUM,\n                SRC_SYS_CD,\n                CLAIMANT_NUM,\n                LOSS_ITEM_NUM,\n                CURR_CD,\n                REC_EFF_DTM FROM CDP_DWH.FACT_LOSS_HISTORY_T\n                WHERE LTST_REC_IND = 'Y' AND SRC_SYS_CD = 'axis') B\n                ON A.ROW_NUM = B.ROW_NUM\n                AND A.CLAIM_NUM = B.CLAIM_NUM\n                AND A.SRC_SYS_CD = B.SRC_SYS_CD\n                AND A.CLAIMANT_NUM = B.CLAIMANT_NUM\n                AND A.LOSS_ITEM_NUM = B.LOSS_ITEM_NUM\n                AND A.CURR_CD = B.CURR_CD\n    )SRC\n        WHERE FACT_LOSS_HISTORY_T.FACT_LOSS_KEY = SRC.FACT_LOSS_KEY;\n/*******UPDATE LATEST RECORD TO N IF IT DOES NOT HAVE HIGH END DATE*****/       \nUPDATE CDP_DWH.FACT_LOSS_HISTORY_T SET LTST_REC_IND = 'N' WHERE  REC_EXP_DTM != '9999-12-31 23:59:59';\n"
    }
]